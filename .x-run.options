
<< browse / coverage / kcov
	exec -- x-www open file://"$( readlink -e -- ./target/kcov/index.html )"
!!

<< browse / doc
	exec -- x-www open file://"$( readlink -e -- ./target/doc/vonuvoli_scheme/index.html )"
!!

<< browse / documentation / readme
	exec -- x-www open http://127.0.0.1:53110/
!!

<< browse / r7rs
	exec -- x-www open file://"$( readlink -e -- ./documentation/external/r7rs-small-spec/stripped/r7rs.pdf )"
!!

<< compile / all / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --no-default-features "${@}"
!!

<< compile / all / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: compile / all / debug' "${@}"
!!

<< compile / all / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --release --all-features "${@}"
!!

<< compile / bin / bencher / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --bin vonuvoli-scheme-bencher --no-default-features "${@}"
!!

<< compile / bin / bencher / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: compile / bin / bencher / debug' "${@}"
!!

<< compile / bin / bencher / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --bin vonuvoli-scheme-bencher --release --all-features "${@}"
!!

<< compile / bin / compiler / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --bin vonuvoli-scheme-compiler --no-default-features "${@}"
!!

<< compile / bin / compiler / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: compile / bin / compiler / debug' "${@}"
!!

<< compile / bin / compiler / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --bin vonuvoli-scheme-compiler --release --all-features "${@}"
!!

<< compile / bin / interpreter / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --bin vonuvoli-scheme-interpreter --no-default-features "${@}"
!!

<< compile / bin / interpreter / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: compile / bin / interpreter / debug' "${@}"
!!

<< compile / bin / interpreter / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --bin vonuvoli-scheme-interpreter --release --all-features "${@}"
!!

<< compile / bin / tester / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --bin vonuvoli-scheme-tester --no-default-features "${@}"
!!

<< compile / bin / tester / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: compile / bin / tester / debug' "${@}"
!!

<< compile / bin / tester / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --bin vonuvoli-scheme-tester --release --all-features "${@}"
!!

<< compile / clean
	exec -- find ./target/ -xdev -depth -print -delete
!!

<< compile / doc / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo doc --quiet --no-default-features "${@}"
!!

<< compile / doc / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo doc --quiet --release --all-features "${@}"
!!

<< compile / documentation / r7rs-support
	exec -- x-run ':: execute / test / low-level-r7rs / tests / all / debug' 2>| ./documentation/r7rs-support.md
!!

<< compile / documentation / readme / restview
	exec -- ./.python/bin/restview -B -l 53110 -- ./readme.rst
!!

<< compile / lib / debug
	x-run ':: compile / peg' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --lib --no-default-features "${@}"
!!

<< compile / lib / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: compile / lib / debug' "${@}"
!!

<< compile / lib / release
	x-run ':: compile / peg' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --lib --release --all-features "${@}"
!!

<< compile / lib / source
		x-run ':: compile / lib / debug'
		env PATH="${RUST_PATH}" \
				rustc \
						-Z unstable-options \
						--pretty=expanded \
						-- ./sources/lib.rs \
		| x-run ':: execute / rust-fmt'
!!

<< compile / peg
		test "${#}" -eq 0
		if test ./sources/parser_peg.peg -nt ./sources/parser_peg.rs ; then
			printf -- '== compile / peg ==\n' >&2
			if test -e ./sources/parser_peg.rs ; then
				rm -- ./sources/parser_peg.rs
			fi
			rust-peg < ./sources/parser_peg.peg >| ./sources/.parser_peg.rs.tmp1
			rust-fmt < ./sources/.parser_peg.rs.tmp1 >| ./sources/.parser_peg.rs.tmp2 && _outcome=0 || _outcome="${?}"
			if test "${_outcome}" -ne 3 ; then
				exit -- "${_outcome}"
			fi
			mv -T -- ./sources/.parser_peg.rs.tmp2 ./sources/parser_peg.rs
			rm -- ./sources/.parser_peg.rs.tmp1
		fi
!!

<< compile / test / all / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --no-default-features --no-run "${@}"
!!

<< compile / test / all / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: compile / test / all / debug' "${@}"
!!

<< compile / test / all / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --release --all-features --no-run "${@}"
!!

<< compile / test / low-level-assertions / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --test 'low-level-assertions' --no-default-features
!!

<< compile / test / low-level-assertions / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --test 'low-level-assertions' --release --all-features
!!

<< compile / test / low-level-parser / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --test 'low-level-parser' --no-default-features
!!

<< compile / test / low-level-parser / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --test 'low-level-parser' --release --all-features
!!

<< compile / test / low-level-r7rs / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --test 'low-level-r7rs' --no-default-features
!!

<< compile / test / low-level-r7rs / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --test 'low-level-r7rs' --release --all-features
!!

<< compile / test / low-level-sizes / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --test 'low-level-sizes' --no-default-features
!!

<< compile / test / low-level-sizes / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --test 'low-level-sizes' --release --all-features
!!

<< compile / test / scheme / debug
	x-run ':: compile / lib / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --test 'scheme' --no-default-features
!!

<< compile / test / scheme / release
	x-run ':: compile / lib / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo build --quiet --test 'scheme' --release --all-features
!!

<< compile / test / scheme / source
		x-run ':: compile / lib / debug'
		env PATH="${RUST_PATH}" \
				rustc \
						--test \
						--extern vonuvoli_scheme=./target/debug/libvonuvoli_scheme.rlib \
						-Z unstable-options \
						--pretty=expanded \
						-- ./tests/scheme.rs \
		| x-run ':: execute / rust-fmt'
!!

<< environment / rust / backtrace / disable
	export -- RUST_BACKTRACE=0
!!

<< environment / rust / backtrace / enable
	export -- RUST_BACKTRACE=1
!!

<< environment / rust / stack / 1024M
	export -- RUST_MIN_STACK=1073741824
!!

<< environment / rust / stack / 128M
	export -- RUST_MIN_STACK=134217728
!!

<< environment / rust-up / use / nightly
	export -- RUST_PATH="$( exec -- readlink -e -- ./.rust/rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin ):$( exec -- readlink -e -- ./.rust/cargo/bin ):${PATH}"
!!

<< environment / rust-up / use / stable
	export -- RUST_PATH="$( exec -- readlink -e -- ./.rust/rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin ):$( exec -- readlink -e -- ./.rust/cargo/bin ):${PATH}"
!!

<< environment / taskset / 0,2
	exec -- taskset -a -p -c 0,2 "${$}"
!!

<< environment / taskset / 3
	exec -- taskset -a -p -c 3 "${$}"
!!

<< environment / taskset / all
	exec -- taskset -a -p -c 0-31 "${$}"
!!

<< environment / tests / debug / disable
	export -- VONUVOLI_SCHEME_TESTS_DEBUG=false
!!

<< environment / tests / debug / enable
	export -- VONUVOLI_SCHEME_TESTS_DEBUG=true
!!

<< environment / x-run / trace / disable
	export -- X_RUN_TRACE=false
!!

<< environment / x-run / trace / enable
	export -- X_RUN_TRACE=true
!!

<< execute / benchmark / chibi / controls
	taskset -c 2 x-run ':: execute / chibi' -- './tests/scripts/benchmark--controls.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--controls--chibi.out'
!!

<< execute / benchmark / chibi / loop
	taskset -c 2 x-run ':: execute / chibi' -- './tests/scripts/benchmark--loop.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--loop--chibi.out'
!!

<< execute / benchmark / chibi / make-cons
	taskset -c 2 x-run ':: execute / chibi' -- './tests/scripts/benchmark--make-cons.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--make-cons--chibi.out'
!!

<< execute / benchmark / chibi / make-vector
	taskset -c 2 x-run ':: execute / chibi' -- './tests/scripts/benchmark--make-vector.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--make-vector--chibi.out'
!!

<< execute / benchmark / chibi / r7rs-ack
	taskset -c 2 x-run ':: execute / chibi' -- './tests/scripts/benchmark--r7rs-ack.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-ack--chibi.out'
!!

<< execute / benchmark / chibi / r7rs-array1
	taskset -c 2 x-run ':: execute / chibi' -- './tests/scripts/benchmark--r7rs-array1.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-array1--chibi.out'
!!

<< execute / benchmark / chibi / r7rs-browse
	taskset -c 2 x-run ':: execute / chibi' -- './tests/scripts/benchmark--r7rs-browse.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-browse--chibi.out'
!!

<< execute / benchmark / compare / all
	x-run ':: execute / benchmark / compare / controls'
	x-run ':: execute / benchmark / compare / loop'
	x-run ':: execute / benchmark / compare / make-cons'
	x-run ':: execute / benchmark / compare / make-vector'
	x-run ':: execute / benchmark / compare / r7rs-ack'
	x-run ':: execute / benchmark / compare / r7rs-array1'
	x-run ':: execute / benchmark / compare / r7rs-browse'
!!

<< execute / benchmark / compare / controls
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
		printf -- '\n== %s / vonuvoli / release ==\n' 'controls' >&2
		x-run ':: execute / benchmark / vonuvoli / controls / release'
		printf -- '\n== %s / chibi ==\n' 'controls' >&2
		x-run ':: execute / benchmark / chibi / controls'
		printf -- '\n== %s / gauche ==\n' 'controls' >&2
		x-run ':: execute / benchmark / gauche / controls'
		if test -e './tests/scripts/benchmark--controls.py' ; then
			printf -- '\n== %s / python ==\n' 'controls' >&2
			x-run ':: execute / benchmark / python / controls'
		fi
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
!!

<< execute / benchmark / compare / loop
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
		printf -- '\n== %s / vonuvoli / release ==\n' 'loop' >&2
		x-run ':: execute / benchmark / vonuvoli / loop / release'
		printf -- '\n== %s / chibi ==\n' 'loop' >&2
		x-run ':: execute / benchmark / chibi / loop'
		printf -- '\n== %s / gauche ==\n' 'loop' >&2
		x-run ':: execute / benchmark / gauche / loop'
		if test -e './tests/scripts/benchmark--loop.py' ; then
			printf -- '\n== %s / python ==\n' 'loop' >&2
			x-run ':: execute / benchmark / python / loop'
		fi
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
!!

<< execute / benchmark / compare / make-cons
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
		printf -- '\n== %s / vonuvoli / release ==\n' 'make-cons' >&2
		x-run ':: execute / benchmark / vonuvoli / make-cons / release'
		printf -- '\n== %s / chibi ==\n' 'make-cons' >&2
		x-run ':: execute / benchmark / chibi / make-cons'
		printf -- '\n== %s / gauche ==\n' 'make-cons' >&2
		x-run ':: execute / benchmark / gauche / make-cons'
		if test -e './tests/scripts/benchmark--make-cons.py' ; then
			printf -- '\n== %s / python ==\n' 'make-cons' >&2
			x-run ':: execute / benchmark / python / make-cons'
		fi
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
!!

<< execute / benchmark / compare / make-vector
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
		printf -- '\n== %s / vonuvoli / release ==\n' 'make-vector' >&2
		x-run ':: execute / benchmark / vonuvoli / make-vector / release'
		printf -- '\n== %s / chibi ==\n' 'make-vector' >&2
		x-run ':: execute / benchmark / chibi / make-vector'
		printf -- '\n== %s / gauche ==\n' 'make-vector' >&2
		x-run ':: execute / benchmark / gauche / make-vector'
		if test -e './tests/scripts/benchmark--make-vector.py' ; then
			printf -- '\n== %s / python ==\n' 'make-vector' >&2
			x-run ':: execute / benchmark / python / make-vector'
		fi
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
!!

<< execute / benchmark / compare / r7rs-ack
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
		printf -- '\n== %s / vonuvoli / release ==\n' 'r7rs-ack' >&2
		x-run ':: execute / benchmark / vonuvoli / r7rs-ack / release'
		printf -- '\n== %s / chibi ==\n' 'r7rs-ack' >&2
		x-run ':: execute / benchmark / chibi / r7rs-ack'
		printf -- '\n== %s / gauche ==\n' 'r7rs-ack' >&2
		x-run ':: execute / benchmark / gauche / r7rs-ack'
		if test -e './tests/scripts/benchmark--r7rs-ack.py' ; then
			printf -- '\n== %s / python ==\n' 'r7rs-ack' >&2
			x-run ':: execute / benchmark / python / r7rs-ack'
		fi
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
!!

<< execute / benchmark / compare / r7rs-array1
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
		printf -- '\n== %s / vonuvoli / release ==\n' 'r7rs-array1' >&2
		x-run ':: execute / benchmark / vonuvoli / r7rs-array1 / release'
		printf -- '\n== %s / chibi ==\n' 'r7rs-array1' >&2
		x-run ':: execute / benchmark / chibi / r7rs-array1'
		printf -- '\n== %s / gauche ==\n' 'r7rs-array1' >&2
		x-run ':: execute / benchmark / gauche / r7rs-array1'
		if test -e './tests/scripts/benchmark--r7rs-array1.py' ; then
			printf -- '\n== %s / python ==\n' 'r7rs-array1' >&2
			x-run ':: execute / benchmark / python / r7rs-array1'
		fi
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
!!

<< execute / benchmark / compare / r7rs-browse
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
		printf -- '\n== %s / vonuvoli / release ==\n' 'r7rs-browse' >&2
		x-run ':: execute / benchmark / vonuvoli / r7rs-browse / release'
		printf -- '\n== %s / chibi ==\n' 'r7rs-browse' >&2
		x-run ':: execute / benchmark / chibi / r7rs-browse'
		printf -- '\n== %s / gauche ==\n' 'r7rs-browse' >&2
		x-run ':: execute / benchmark / gauche / r7rs-browse'
		if test -e './tests/scripts/benchmark--r7rs-browse.py' ; then
			printf -- '\n== %s / python ==\n' 'r7rs-browse' >&2
			x-run ':: execute / benchmark / python / r7rs-browse'
		fi
		printf -- '\n--------------------------------------------------------------------------------\n' >&2
!!

<< execute / benchmark / gauche / controls
	taskset -c 2 x-run ':: execute / gauche' -- './tests/scripts/benchmark--controls.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--controls--gauche.out'
!!

<< execute / benchmark / gauche / loop
	taskset -c 2 x-run ':: execute / gauche' -- './tests/scripts/benchmark--loop.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--loop--gauche.out'
!!

<< execute / benchmark / gauche / make-cons
	taskset -c 2 x-run ':: execute / gauche' -- './tests/scripts/benchmark--make-cons.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--make-cons--gauche.out'
!!

<< execute / benchmark / gauche / make-vector
	taskset -c 2 x-run ':: execute / gauche' -- './tests/scripts/benchmark--make-vector.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--make-vector--gauche.out'
!!

<< execute / benchmark / gauche / r7rs-ack
	taskset -c 2 x-run ':: execute / gauche' -- './tests/scripts/benchmark--r7rs-ack.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-ack--gauche.out'
!!

<< execute / benchmark / gauche / r7rs-array1
	taskset -c 2 x-run ':: execute / gauche' -- './tests/scripts/benchmark--r7rs-array1.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-array1--gauche.out'
!!

<< execute / benchmark / gauche / r7rs-browse
	taskset -c 2 x-run ':: execute / gauche' -- './tests/scripts/benchmark--r7rs-browse.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-browse--gauche.out'
!!

<< execute / benchmark / python / controls
	taskset -c 2 x-run ':: execute / python' -- './tests/scripts/benchmark--controls.py' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--controls--python.out'
!!

<< execute / benchmark / python / loop
	taskset -c 2 x-run ':: execute / python' -- './tests/scripts/benchmark--loop.py' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--loop--python.out'
!!

<< execute / benchmark / python / make-cons
	taskset -c 2 x-run ':: execute / python' -- './tests/scripts/benchmark--make-cons.py' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--make-cons--python.out'
!!

<< execute / benchmark / python / make-vector
	taskset -c 2 x-run ':: execute / python' -- './tests/scripts/benchmark--make-vector.py' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--make-vector--python.out'
!!

<< execute / benchmark / vonuvoli / all / release
	x-run ':: execute / benchmark / vonuvoli / controls / release'
	x-run ':: execute / benchmark / vonuvoli / loop / release'
	x-run ':: execute / benchmark / vonuvoli / make-cons / release'
	x-run ':: execute / benchmark / vonuvoli / make-vector / release'
	x-run ':: execute / benchmark / vonuvoli / r7rs-ack / release'
	x-run ':: execute / benchmark / vonuvoli / r7rs-array1 / release'
	x-run ':: execute / benchmark / vonuvoli / r7rs-browse / release'
!!

<< execute / benchmark / vonuvoli / controls / debug
	taskset -c 2 x-run ':: execute / bin / interpreter / debug' './tests/scripts/benchmark--controls.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--controls--vonuvoli-debug.out'
!!

<< execute / benchmark / vonuvoli / controls / release
	taskset -c 2 x-run ':: execute / bin / interpreter / release' './tests/scripts/benchmark--controls.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--controls--vonuvoli-release.out'
!!

<< execute / benchmark / vonuvoli / loop / debug
	taskset -c 2 x-run ':: execute / bin / interpreter / debug' './tests/scripts/benchmark--loop.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--loop--vonuvoli-debug.out'
!!

<< execute / benchmark / vonuvoli / loop / release
	taskset -c 2 x-run ':: execute / bin / interpreter / release' './tests/scripts/benchmark--loop.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--loop--vonuvoli-release.out'
!!

<< execute / benchmark / vonuvoli / make-cons / debug
	taskset -c 2 x-run ':: execute / bin / interpreter / debug' './tests/scripts/benchmark--make-cons.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--make-cons--vonuvoli-debug.out'
!!

<< execute / benchmark / vonuvoli / make-cons / release
	taskset -c 2 x-run ':: execute / bin / interpreter / release' './tests/scripts/benchmark--make-cons.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--make-cons--vonuvoli-release.out'
!!

<< execute / benchmark / vonuvoli / make-vector / debug
	taskset -c 2 x-run ':: execute / bin / interpreter / debug' './tests/scripts/benchmark--make-vector.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--make-vector--vonuvoli-debug.out'
!!

<< execute / benchmark / vonuvoli / make-vector / release
	taskset -c 2 x-run ':: execute / bin / interpreter / release' './tests/scripts/benchmark--make-vector.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--make-vector--vonuvoli-release.out'
!!

<< execute / benchmark / vonuvoli / r7rs-ack / debug
	taskset -c 2 x-run ':: execute / bin / interpreter / debug' './tests/scripts/benchmark--r7rs-ack.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-ack--vonuvoli-debug.out'
!!

<< execute / benchmark / vonuvoli / r7rs-ack / release
	taskset -c 2 x-run ':: execute / bin / interpreter / release' './tests/scripts/benchmark--r7rs-ack.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-ack--vonuvoli-release.out'
!!

<< execute / benchmark / vonuvoli / r7rs-array1 / debug
	taskset -c 2 x-run ':: execute / bin / interpreter / debug' './tests/scripts/benchmark--r7rs-array1.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-array1--vonuvoli-debug.out'
!!

<< execute / benchmark / vonuvoli / r7rs-array1 / release
	taskset -c 2 x-run ':: execute / bin / interpreter / release' './tests/scripts/benchmark--r7rs-array1.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-array1--vonuvoli-release.out'
!!

<< execute / benchmark / vonuvoli / r7rs-browse / debug
	taskset -c 2 x-run ':: execute / bin / interpreter / debug' './tests/scripts/benchmark--r7rs-browse.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-browse--vonuvoli-debug.out'
!!

<< execute / benchmark / vonuvoli / r7rs-browse / release
	taskset -c 2 x-run ':: execute / bin / interpreter / release' './tests/scripts/benchmark--r7rs-browse.ss' "${@}" < /dev/null | tee -- './tests/scripts/_out/benchmark--r7rs-browse--vonuvoli-release.out'
!!

<< execute / bin / bencher / all / release
	x-run ':: compile / bin / bencher / release'
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__arithmetic.out' x-run ':: execute / bin / bencher / release' './tests/scheme/arithmetic.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__arrays.out' x-run ':: execute / bin / bencher / release' './tests/scheme/arrays.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__booleans.out' x-run ':: execute / bin / bencher / release' './tests/scheme/booleans.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__bytes.out' x-run ':: execute / bin / bencher / release' './tests/scheme/bytes.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_by_identity.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-by-identity.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_by_value_coerced.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-by-value-coerced.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_by_value_coerced_recursive.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-by-value-coerced-recursive.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_by_value_strict.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-by-value-strict.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_by_value_strict_recursive.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-by-value-strict-recursive.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_objects.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-objects.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_ordering_numbers.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-ordering-numbers.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_ordering_objects.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-ordering-objects.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__contexts.out' x-run ':: execute / bin / bencher / release' './tests/scheme/contexts.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__control.out' x-run ':: execute / bin / bencher / release' './tests/scheme/control.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__functions.out' x-run ':: execute / bin / bencher / release' './tests/scheme/functions.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__functions_arrays.out' x-run ':: execute / bin / bencher / release' './tests/scheme/functions-arrays.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__functions_bytes.out' x-run ':: execute / bin / bencher / release' './tests/scheme/functions-bytes.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__functions_lists.out' x-run ':: execute / bin / bencher / release' './tests/scheme/functions-lists.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__functions_strings.out' x-run ':: execute / bin / bencher / release' './tests/scheme/functions-strings.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__issues.out' x-run ':: execute / bin / bencher / release' './tests/scheme/issues.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__lambdas.out' x-run ':: execute / bin / bencher / release' './tests/scheme/lambdas.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__lists.out' x-run ':: execute / bin / bencher / release' './tests/scheme/lists.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__loops.out' x-run ':: execute / bin / bencher / release' './tests/scheme/loops.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__pairs.out' x-run ':: execute / bin / bencher / release' './tests/scheme/pairs.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__ports.out' x-run ':: execute / bin / bencher / release' './tests/scheme/ports.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__ports_memory.out' x-run ':: execute / bin / bencher / release' './tests/scheme/ports-memory.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__ports_native.out' x-run ':: execute / bin / bencher / release' './tests/scheme/ports-native.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__processes.out' x-run ':: execute / bin / bencher / release' './tests/scheme/processes.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__quotation.out' x-run ':: execute / bin / bencher / release' './tests/scheme/quotation.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__runtime.out' x-run ':: execute / bin / bencher / release' './tests/scheme/runtime.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__scratchpad.out' x-run ':: execute / bin / bencher / release' './tests/scheme/scratchpad.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__strings.out' x-run ':: execute / bin / bencher / release' './tests/scheme/strings.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__types.out' x-run ':: execute / bin / bencher / release' './tests/scheme/types.sst' "${@}"
	taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__values.out' x-run ':: execute / bin / bencher / release' './tests/scheme/values.sst' "${@}"
!!

<< execute / bin / bencher / arithmetic / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/arithmetic.sst' "${@}"
!!

<< execute / bin / bencher / arithmetic / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__arithmetic.out' x-run ':: execute / bin / bencher / release' './tests/scheme/arithmetic.sst' "${@}"
!!

<< execute / bin / bencher / arrays / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/arrays.sst' "${@}"
!!

<< execute / bin / bencher / arrays / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__arrays.out' x-run ':: execute / bin / bencher / release' './tests/scheme/arrays.sst' "${@}"
!!

<< execute / bin / bencher / booleans / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/booleans.sst' "${@}"
!!

<< execute / bin / bencher / booleans / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__booleans.out' x-run ':: execute / bin / bencher / release' './tests/scheme/booleans.sst' "${@}"
!!

<< execute / bin / bencher / bytes / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/bytes.sst' "${@}"
!!

<< execute / bin / bencher / bytes / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__bytes.out' x-run ':: execute / bin / bencher / release' './tests/scheme/bytes.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-by-identity / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/comparisons-equivalent-by-identity.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-by-identity / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_by_identity.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-by-identity.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-by-value-coerced / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/comparisons-equivalent-by-value-coerced.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-by-value-coerced / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_by_value_coerced.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-by-value-coerced.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-by-value-coerced-recursive / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/comparisons-equivalent-by-value-coerced-recursive.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-by-value-coerced-recursive / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_by_value_coerced_recursive.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-by-value-coerced-recursive.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-by-value-strict / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/comparisons-equivalent-by-value-strict.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-by-value-strict / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_by_value_strict.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-by-value-strict.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-by-value-strict-recursive / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/comparisons-equivalent-by-value-strict-recursive.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-by-value-strict-recursive / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_by_value_strict_recursive.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-by-value-strict-recursive.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-objects / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/comparisons-equivalent-objects.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-equivalent-objects / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_equivalent_objects.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-equivalent-objects.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-ordering-numbers / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/comparisons-ordering-numbers.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-ordering-numbers / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_ordering_numbers.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-ordering-numbers.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-ordering-objects / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/comparisons-ordering-objects.sst' "${@}"
!!

<< execute / bin / bencher / comparisons-ordering-objects / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__comparisons_ordering_objects.out' x-run ':: execute / bin / bencher / release' './tests/scheme/comparisons-ordering-objects.sst' "${@}"
!!

<< execute / bin / bencher / contexts / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/contexts.sst' "${@}"
!!

<< execute / bin / bencher / contexts / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__contexts.out' x-run ':: execute / bin / bencher / release' './tests/scheme/contexts.sst' "${@}"
!!

<< execute / bin / bencher / control / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/control.sst' "${@}"
!!

<< execute / bin / bencher / control / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__control.out' x-run ':: execute / bin / bencher / release' './tests/scheme/control.sst' "${@}"
!!

<< execute / bin / bencher / debug
	x-run ':: compile / bin / bencher / debug' ; exec -- ./target/debug/vonuvoli-scheme-bencher "${@}"
!!

<< execute / bin / bencher / functions / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/functions.sst' "${@}"
!!

<< execute / bin / bencher / functions / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__functions.out' x-run ':: execute / bin / bencher / release' './tests/scheme/functions.sst' "${@}"
!!

<< execute / bin / bencher / functions-arrays / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/functions-arrays.sst' "${@}"
!!

<< execute / bin / bencher / functions-arrays / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__functions_arrays.out' x-run ':: execute / bin / bencher / release' './tests/scheme/functions-arrays.sst' "${@}"
!!

<< execute / bin / bencher / functions-bytes / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/functions-bytes.sst' "${@}"
!!

<< execute / bin / bencher / functions-bytes / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__functions_bytes.out' x-run ':: execute / bin / bencher / release' './tests/scheme/functions-bytes.sst' "${@}"
!!

<< execute / bin / bencher / functions-lists / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/functions-lists.sst' "${@}"
!!

<< execute / bin / bencher / functions-lists / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__functions_lists.out' x-run ':: execute / bin / bencher / release' './tests/scheme/functions-lists.sst' "${@}"
!!

<< execute / bin / bencher / functions-strings / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/functions-strings.sst' "${@}"
!!

<< execute / bin / bencher / functions-strings / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__functions_strings.out' x-run ':: execute / bin / bencher / release' './tests/scheme/functions-strings.sst' "${@}"
!!

<< execute / bin / bencher / issues / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/issues.sst' "${@}"
!!

<< execute / bin / bencher / issues / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__issues.out' x-run ':: execute / bin / bencher / release' './tests/scheme/issues.sst' "${@}"
!!

<< execute / bin / bencher / lambdas / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/lambdas.sst' "${@}"
!!

<< execute / bin / bencher / lambdas / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__lambdas.out' x-run ':: execute / bin / bencher / release' './tests/scheme/lambdas.sst' "${@}"
!!

<< execute / bin / bencher / lists / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/lists.sst' "${@}"
!!

<< execute / bin / bencher / lists / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__lists.out' x-run ':: execute / bin / bencher / release' './tests/scheme/lists.sst' "${@}"
!!

<< execute / bin / bencher / loops / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/loops.sst' "${@}"
!!

<< execute / bin / bencher / loops / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__loops.out' x-run ':: execute / bin / bencher / release' './tests/scheme/loops.sst' "${@}"
!!

<< execute / bin / bencher / pairs / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/pairs.sst' "${@}"
!!

<< execute / bin / bencher / pairs / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__pairs.out' x-run ':: execute / bin / bencher / release' './tests/scheme/pairs.sst' "${@}"
!!

<< execute / bin / bencher / ports / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/ports.sst' "${@}"
!!

<< execute / bin / bencher / ports / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__ports.out' x-run ':: execute / bin / bencher / release' './tests/scheme/ports.sst' "${@}"
!!

<< execute / bin / bencher / ports-memory / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/ports-memory.sst' "${@}"
!!

<< execute / bin / bencher / ports-memory / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__ports_memory.out' x-run ':: execute / bin / bencher / release' './tests/scheme/ports-memory.sst' "${@}"
!!

<< execute / bin / bencher / ports-native / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/ports-native.sst' "${@}"
!!

<< execute / bin / bencher / ports-native / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__ports_native.out' x-run ':: execute / bin / bencher / release' './tests/scheme/ports-native.sst' "${@}"
!!

<< execute / bin / bencher / processes / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/processes.sst' "${@}"
!!

<< execute / bin / bencher / processes / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__processes.out' x-run ':: execute / bin / bencher / release' './tests/scheme/processes.sst' "${@}"
!!

<< execute / bin / bencher / quotation / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/quotation.sst' "${@}"
!!

<< execute / bin / bencher / quotation / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__quotation.out' x-run ':: execute / bin / bencher / release' './tests/scheme/quotation.sst' "${@}"
!!

<< execute / bin / bencher / release
	x-run ':: compile / bin / bencher / release' ; exec -- ./target/release/vonuvoli-scheme-bencher "${@}"
!!

<< execute / bin / bencher / runtime / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/runtime.sst' "${@}"
!!

<< execute / bin / bencher / runtime / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__runtime.out' x-run ':: execute / bin / bencher / release' './tests/scheme/runtime.sst' "${@}"
!!

<< execute / bin / bencher / scratchpad / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/scratchpad.sst' "${@}"
!!

<< execute / bin / bencher / scratchpad / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__scratchpad.out' x-run ':: execute / bin / bencher / release' './tests/scheme/scratchpad.sst' "${@}"
!!

<< execute / bin / bencher / strings / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/strings.sst' "${@}"
!!

<< execute / bin / bencher / strings / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__strings.out' x-run ':: execute / bin / bencher / release' './tests/scheme/strings.sst' "${@}"
!!

<< execute / bin / bencher / types / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/types.sst' "${@}"
!!

<< execute / bin / bencher / types / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__types.out' x-run ':: execute / bin / bencher / release' './tests/scheme/types.sst' "${@}"
!!

<< execute / bin / bencher / values / debug
	exec -- taskset -c 2 x-run ':: execute / bin / bencher / debug' './tests/scheme/values.sst' "${@}"
!!

<< execute / bin / bencher / values / release
	exec -- taskset -c 2 env  VOLUTINO_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/benchmark__values.out' x-run ':: execute / bin / bencher / release' './tests/scheme/values.sst' "${@}"
!!

<< execute / bin / compiler / all / debug
	x-run ':: compile / bin / compiler / debug'
	nice -n 19 -- ./target/debug/vonuvoli-scheme-compiler './tests/scripts/benchmark--controls.ss' "${@}" >| './tests/scripts/_out/benchmark--controls--vonuvoli-compile.out'
	nice -n 19 -- ./target/debug/vonuvoli-scheme-compiler './tests/scripts/benchmark--loop.ss' "${@}" >| './tests/scripts/_out/benchmark--loop--vonuvoli-compile.out'
	nice -n 19 -- ./target/debug/vonuvoli-scheme-compiler './tests/scripts/benchmark--make-cons.ss' "${@}" >| './tests/scripts/_out/benchmark--make-cons--vonuvoli-compile.out'
	nice -n 19 -- ./target/debug/vonuvoli-scheme-compiler './tests/scripts/benchmark--make-vector.ss' "${@}" >| './tests/scripts/_out/benchmark--make-vector--vonuvoli-compile.out'
	nice -n 19 -- ./target/debug/vonuvoli-scheme-compiler './tests/scripts/benchmark--r7rs-ack.ss' "${@}" >| './tests/scripts/_out/benchmark--r7rs-ack--vonuvoli-compile.out'
	nice -n 19 -- ./target/debug/vonuvoli-scheme-compiler './tests/scripts/benchmark--r7rs-array1.ss' "${@}" >| './tests/scripts/_out/benchmark--r7rs-array1--vonuvoli-compile.out'
	nice -n 19 -- ./target/debug/vonuvoli-scheme-compiler './tests/scripts/benchmark--r7rs-browse.ss' "${@}" >| './tests/scripts/_out/benchmark--r7rs-browse--vonuvoli-compile.out'
	nice -n 19 -- ./target/debug/vonuvoli-scheme-compiler './tests/scripts/optimizer--controls.ss' "${@}" >| './tests/scripts/_out/optimizer--controls--vonuvoli-compile.out'
!!

<< execute / bin / compiler / controls / debug
	nice -n 19 -- x-run ':: execute / bin / compiler / debug' './tests/scripts/optimizer--controls.ss' "${@}" >| './tests/scripts/_out/optimizer--controls--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--controls--vonuvoli-compile.out'
!!

<< execute / bin / compiler / controls / debug
	x-run ':: execute / bin / compiler / debug' './tests/scripts/benchmark--controls.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--controls--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--controls--vonuvoli-compile.out'
!!

<< execute / bin / compiler / controls / release
	nice -n 19 -- x-run ':: execute / bin / compiler / release' './tests/scripts/optimizer--controls.ss' "${@}" >| './tests/scripts/_out/optimizer--controls--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--controls--vonuvoli-compile.out'
!!

<< execute / bin / compiler / controls / release
	x-run ':: execute / bin / compiler / release' ./tests/scripts/benchmark--controls.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--controls--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--controls--vonuvoli-compile.out'
!!

<< execute / bin / compiler / debug
	x-run ':: compile / bin / compiler / debug' ; exec -- ./target/debug/vonuvoli-scheme-compiler "${@}"
!!

<< execute / bin / compiler / debug / x-selection / clipboard
	exec -- less-exec x-run ':: execute / bin / compiler / debug' <( exec -- x-selection clipboard output )
!!

<< execute / bin / compiler / debug / x-selection / primary
	exec -- less-exec x-run ':: execute / bin / compiler / debug' <( exec -- x-selection primary output )
!!

<< execute / bin / compiler / loop / debug
	nice -n 19 -- x-run ':: execute / bin / compiler / debug' './tests/scripts/optimizer--loop.ss' "${@}" >| './tests/scripts/_out/optimizer--loop--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--loop--vonuvoli-compile.out'
!!

<< execute / bin / compiler / loop / debug
	x-run ':: execute / bin / compiler / debug' './tests/scripts/benchmark--loop.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--loop--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--loop--vonuvoli-compile.out'
!!

<< execute / bin / compiler / loop / release
	nice -n 19 -- x-run ':: execute / bin / compiler / release' './tests/scripts/optimizer--loop.ss' "${@}" >| './tests/scripts/_out/optimizer--loop--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--loop--vonuvoli-compile.out'
!!

<< execute / bin / compiler / loop / release
	x-run ':: execute / bin / compiler / release' ./tests/scripts/benchmark--loop.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--loop--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--loop--vonuvoli-compile.out'
!!

<< execute / bin / compiler / make-cons / debug
	nice -n 19 -- x-run ':: execute / bin / compiler / debug' './tests/scripts/optimizer--make-cons.ss' "${@}" >| './tests/scripts/_out/optimizer--make-cons--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--make-cons--vonuvoli-compile.out'
!!

<< execute / bin / compiler / make-cons / debug
	x-run ':: execute / bin / compiler / debug' './tests/scripts/benchmark--make-cons.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--make-cons--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--make-cons--vonuvoli-compile.out'
!!

<< execute / bin / compiler / make-cons / release
	nice -n 19 -- x-run ':: execute / bin / compiler / release' './tests/scripts/optimizer--make-cons.ss' "${@}" >| './tests/scripts/_out/optimizer--make-cons--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--make-cons--vonuvoli-compile.out'
!!

<< execute / bin / compiler / make-cons / release
	x-run ':: execute / bin / compiler / release' ./tests/scripts/benchmark--make-cons.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--make-cons--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--make-cons--vonuvoli-compile.out'
!!

<< execute / bin / compiler / make-vector / debug
	nice -n 19 -- x-run ':: execute / bin / compiler / debug' './tests/scripts/optimizer--make-vector.ss' "${@}" >| './tests/scripts/_out/optimizer--make-vector--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--make-vector--vonuvoli-compile.out'
!!

<< execute / bin / compiler / make-vector / debug
	x-run ':: execute / bin / compiler / debug' './tests/scripts/benchmark--make-vector.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--make-vector--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--make-vector--vonuvoli-compile.out'
!!

<< execute / bin / compiler / make-vector / release
	nice -n 19 -- x-run ':: execute / bin / compiler / release' './tests/scripts/optimizer--make-vector.ss' "${@}" >| './tests/scripts/_out/optimizer--make-vector--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--make-vector--vonuvoli-compile.out'
!!

<< execute / bin / compiler / make-vector / release
	x-run ':: execute / bin / compiler / release' ./tests/scripts/benchmark--make-vector.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--make-vector--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--make-vector--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-ack / debug
	nice -n 19 -- x-run ':: execute / bin / compiler / debug' './tests/scripts/optimizer--r7rs-ack.ss' "${@}" >| './tests/scripts/_out/optimizer--r7rs-ack--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--r7rs-ack--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-ack / debug
	x-run ':: execute / bin / compiler / debug' './tests/scripts/benchmark--r7rs-ack.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--r7rs-ack--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--r7rs-ack--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-ack / release
	nice -n 19 -- x-run ':: execute / bin / compiler / release' './tests/scripts/optimizer--r7rs-ack.ss' "${@}" >| './tests/scripts/_out/optimizer--r7rs-ack--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--r7rs-ack--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-ack / release
	x-run ':: execute / bin / compiler / release' ./tests/scripts/benchmark--r7rs-ack.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--r7rs-ack--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--r7rs-ack--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-array1 / debug
	nice -n 19 -- x-run ':: execute / bin / compiler / debug' './tests/scripts/optimizer--r7rs-array1.ss' "${@}" >| './tests/scripts/_out/optimizer--r7rs-array1--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--r7rs-array1--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-array1 / debug
	x-run ':: execute / bin / compiler / debug' './tests/scripts/benchmark--r7rs-array1.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--r7rs-array1--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--r7rs-array1--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-array1 / release
	nice -n 19 -- x-run ':: execute / bin / compiler / release' './tests/scripts/optimizer--r7rs-array1.ss' "${@}" >| './tests/scripts/_out/optimizer--r7rs-array1--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--r7rs-array1--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-array1 / release
	x-run ':: execute / bin / compiler / release' ./tests/scripts/benchmark--r7rs-array1.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--r7rs-array1--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--r7rs-array1--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-browse / debug
	nice -n 19 -- x-run ':: execute / bin / compiler / debug' './tests/scripts/optimizer--r7rs-browse.ss' "${@}" >| './tests/scripts/_out/optimizer--r7rs-browse--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--r7rs-browse--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-browse / debug
	x-run ':: execute / bin / compiler / debug' './tests/scripts/benchmark--r7rs-browse.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--r7rs-browse--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--r7rs-browse--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-browse / release
	nice -n 19 -- x-run ':: execute / bin / compiler / release' './tests/scripts/optimizer--r7rs-browse.ss' "${@}" >| './tests/scripts/_out/optimizer--r7rs-browse--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/optimizer--r7rs-browse--vonuvoli-compile.out'
!!

<< execute / bin / compiler / r7rs-browse / release
	x-run ':: execute / bin / compiler / release' ./tests/scripts/benchmark--r7rs-browse.ss' "${@}" < /dev/null >| './tests/scripts/_out/benchmark--r7rs-browse--vonuvoli-compile.out' ; exec -- less -- './tests/scripts/_out/benchmark--r7rs-browse--vonuvoli-compile.out'
!!

<< execute / bin / compiler / release
	x-run ':: compile / bin / compiler / release' ; exec -- ./target/release/vonuvoli-scheme-compiler "${@}"
!!

<< execute / bin / interpreter / debug
	x-run ':: compile / bin / interpreter / debug' ; exec -- ./target/debug/vonuvoli-scheme-interpreter "${@}"
!!

<< execute / bin / interpreter / debug / x-selection / clipboard
	exec -- x-run ':: execute / bin / interpreter / debug' <( exec -- x-selection clipboard output )
!!

<< execute / bin / interpreter / debug / x-selection / primary
	exec -- x-run ':: execute / bin / interpreter / debug' <( exec -- x-selection primary output )
!!

<< execute / bin / interpreter / release
	x-run ':: compile / bin / interpreter / release' ; exec -- ./target/release/vonuvoli-scheme-interpreter "${@}"
!!

<< execute / bin / tester / all / debug
	x-run ':: compile / bin / tester / debug'
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/arithmetic.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/arrays.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/booleans.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/bytes.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-by-identity.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-by-value-coerced.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-by-value-coerced-recursive.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-by-value-strict.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-by-value-strict-recursive.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-objects.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-ordering-numbers.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-ordering-objects.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/contexts.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/control.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/functions.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/functions-arrays.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/functions-bytes.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/functions-lists.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/functions-strings.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/issues.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/lambdas.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/lists.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/loops.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/pairs.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/ports.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/ports-memory.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/ports-native.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/processes.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/quotation.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/runtime.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/scratchpad.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/strings.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/types.sst' "${@}"
	nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/values.sst' "${@}"
!!

<< execute / bin / tester / arithmetic / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/arithmetic.sst' "${@}"
!!

<< execute / bin / tester / arithmetic / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / arithmetic / debug'
!!

<< execute / bin / tester / arithmetic / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/arithmetic.sst' "${@}"
!!

<< execute / bin / tester / arrays / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/arrays.sst' "${@}"
!!

<< execute / bin / tester / arrays / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / arrays / debug'
!!

<< execute / bin / tester / arrays / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/arrays.sst' "${@}"
!!

<< execute / bin / tester / booleans / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/booleans.sst' "${@}"
!!

<< execute / bin / tester / booleans / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / booleans / debug'
!!

<< execute / bin / tester / booleans / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/booleans.sst' "${@}"
!!

<< execute / bin / tester / bytes / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/bytes.sst' "${@}"
!!

<< execute / bin / tester / bytes / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / bytes / debug'
!!

<< execute / bin / tester / bytes / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/bytes.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-by-identity / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-by-identity.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-by-identity / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / comparisons-equivalent-by-identity / debug'
!!

<< execute / bin / tester / comparisons-equivalent-by-identity / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/comparisons-equivalent-by-identity.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-by-value-coerced / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-by-value-coerced.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-by-value-coerced / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / comparisons-equivalent-by-value-coerced / debug'
!!

<< execute / bin / tester / comparisons-equivalent-by-value-coerced / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/comparisons-equivalent-by-value-coerced.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-by-value-coerced-recursive / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-by-value-coerced-recursive.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-by-value-coerced-recursive / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / comparisons-equivalent-by-value-coerced-recursive / debug'
!!

<< execute / bin / tester / comparisons-equivalent-by-value-coerced-recursive / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/comparisons-equivalent-by-value-coerced-recursive.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-by-value-strict / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-by-value-strict.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-by-value-strict / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / comparisons-equivalent-by-value-strict / debug'
!!

<< execute / bin / tester / comparisons-equivalent-by-value-strict / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/comparisons-equivalent-by-value-strict.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-by-value-strict-recursive / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-by-value-strict-recursive.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-by-value-strict-recursive / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / comparisons-equivalent-by-value-strict-recursive / debug'
!!

<< execute / bin / tester / comparisons-equivalent-by-value-strict-recursive / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/comparisons-equivalent-by-value-strict-recursive.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-objects / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-equivalent-objects.sst' "${@}"
!!

<< execute / bin / tester / comparisons-equivalent-objects / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / comparisons-equivalent-objects / debug'
!!

<< execute / bin / tester / comparisons-equivalent-objects / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/comparisons-equivalent-objects.sst' "${@}"
!!

<< execute / bin / tester / comparisons-ordering-numbers / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-ordering-numbers.sst' "${@}"
!!

<< execute / bin / tester / comparisons-ordering-numbers / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / comparisons-ordering-numbers / debug'
!!

<< execute / bin / tester / comparisons-ordering-numbers / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/comparisons-ordering-numbers.sst' "${@}"
!!

<< execute / bin / tester / comparisons-ordering-objects / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/comparisons-ordering-objects.sst' "${@}"
!!

<< execute / bin / tester / comparisons-ordering-objects / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / comparisons-ordering-objects / debug'
!!

<< execute / bin / tester / comparisons-ordering-objects / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/comparisons-ordering-objects.sst' "${@}"
!!

<< execute / bin / tester / contexts / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/contexts.sst' "${@}"
!!

<< execute / bin / tester / contexts / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / contexts / debug'
!!

<< execute / bin / tester / contexts / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/contexts.sst' "${@}"
!!

<< execute / bin / tester / control / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/control.sst' "${@}"
!!

<< execute / bin / tester / control / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / control / debug'
!!

<< execute / bin / tester / control / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/control.sst' "${@}"
!!

<< execute / bin / tester / debug
	x-run ':: compile / bin / tester / debug' ; exec -- ./target/debug/vonuvoli-scheme-tester "${@}"
!!

<< execute / bin / tester / functions / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/functions.sst' "${@}"
!!

<< execute / bin / tester / functions / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / functions / debug'
!!

<< execute / bin / tester / functions / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/functions.sst' "${@}"
!!

<< execute / bin / tester / functions-arrays / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/functions-arrays.sst' "${@}"
!!

<< execute / bin / tester / functions-arrays / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / functions-arrays / debug'
!!

<< execute / bin / tester / functions-arrays / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/functions-arrays.sst' "${@}"
!!

<< execute / bin / tester / functions-bytes / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/functions-bytes.sst' "${@}"
!!

<< execute / bin / tester / functions-bytes / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / functions-bytes / debug'
!!

<< execute / bin / tester / functions-bytes / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/functions-bytes.sst' "${@}"
!!

<< execute / bin / tester / functions-lists / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/functions-lists.sst' "${@}"
!!

<< execute / bin / tester / functions-lists / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / functions-lists / debug'
!!

<< execute / bin / tester / functions-lists / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/functions-lists.sst' "${@}"
!!

<< execute / bin / tester / functions-strings / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/functions-strings.sst' "${@}"
!!

<< execute / bin / tester / functions-strings / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / functions-strings / debug'
!!

<< execute / bin / tester / functions-strings / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/functions-strings.sst' "${@}"
!!

<< execute / bin / tester / issues / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/issues.sst' "${@}"
!!

<< execute / bin / tester / issues / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / issues / debug'
!!

<< execute / bin / tester / issues / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/issues.sst' "${@}"
!!

<< execute / bin / tester / lambdas / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/lambdas.sst' "${@}"
!!

<< execute / bin / tester / lambdas / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / lambdas / debug'
!!

<< execute / bin / tester / lambdas / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/lambdas.sst' "${@}"
!!

<< execute / bin / tester / lists / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/lists.sst' "${@}"
!!

<< execute / bin / tester / lists / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / lists / debug'
!!

<< execute / bin / tester / lists / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/lists.sst' "${@}"
!!

<< execute / bin / tester / loops / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/loops.sst' "${@}"
!!

<< execute / bin / tester / loops / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / loops / debug'
!!

<< execute / bin / tester / loops / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/loops.sst' "${@}"
!!

<< execute / bin / tester / pairs / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/pairs.sst' "${@}"
!!

<< execute / bin / tester / pairs / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / pairs / debug'
!!

<< execute / bin / tester / pairs / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/pairs.sst' "${@}"
!!

<< execute / bin / tester / ports / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/ports.sst' "${@}"
!!

<< execute / bin / tester / ports / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / ports / debug'
!!

<< execute / bin / tester / ports / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/ports.sst' "${@}"
!!

<< execute / bin / tester / ports-memory / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/ports-memory.sst' "${@}"
!!

<< execute / bin / tester / ports-memory / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / ports-memory / debug'
!!

<< execute / bin / tester / ports-memory / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/ports-memory.sst' "${@}"
!!

<< execute / bin / tester / ports-native / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/ports-native.sst' "${@}"
!!

<< execute / bin / tester / ports-native / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / ports-native / debug'
!!

<< execute / bin / tester / ports-native / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/ports-native.sst' "${@}"
!!

<< execute / bin / tester / processes / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/processes.sst' "${@}"
!!

<< execute / bin / tester / processes / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / processes / debug'
!!

<< execute / bin / tester / processes / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/processes.sst' "${@}"
!!

<< execute / bin / tester / quotation / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/quotation.sst' "${@}"
!!

<< execute / bin / tester / quotation / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / quotation / debug'
!!

<< execute / bin / tester / quotation / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/quotation.sst' "${@}"
!!

<< execute / bin / tester / release
	x-run ':: compile / bin / tester / release' ; exec -- ./target/release/vonuvoli-scheme-tester "${@}"
!!

<< execute / bin / tester / runtime / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/runtime.sst' "${@}"
!!

<< execute / bin / tester / runtime / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / runtime / debug'
!!

<< execute / bin / tester / runtime / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/runtime.sst' "${@}"
!!

<< execute / bin / tester / scratchpad / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/scratchpad.sst' "${@}"
!!

<< execute / bin / tester / scratchpad / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / scratchpad / debug'
!!

<< execute / bin / tester / scratchpad / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/scratchpad.sst' "${@}"
!!

<< execute / bin / tester / strings / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/strings.sst' "${@}"
!!

<< execute / bin / tester / strings / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / strings / debug'
!!

<< execute / bin / tester / strings / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/strings.sst' "${@}"
!!

<< execute / bin / tester / types / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/types.sst' "${@}"
!!

<< execute / bin / tester / types / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / types / debug'
!!

<< execute / bin / tester / types / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/types.sst' "${@}"
!!

<< execute / bin / tester / values / debug
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / debug' './tests/scheme/values.sst' "${@}"
!!

<< execute / bin / tester / values / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / bin / tester / values / debug'
!!

<< execute / bin / tester / values / release
	exec -- nice -n 19 -- x-run ':: execute / bin / tester / release' './tests/scheme/values.sst' "${@}"
!!

<< execute / chibi
	exec -- chibi-scheme -m scheme.base -m scheme.case-lambda -m scheme.char -m scheme.complex -m scheme.cxr -m scheme.eval -m scheme.file -m scheme.inexact -m scheme.lazy -m scheme.load -m scheme.process-context -m scheme.r5rs -m scheme.read -m scheme.repl -m scheme.time -m scheme.write "${@}"
!!

<< execute / gauche
	exec -- gosh -b -q -u scheme.base -u scheme.case-lambda -u scheme.char -u scheme.complex -u scheme.cxr -u scheme.eval -u scheme.file -u scheme.inexact -u scheme.lazy -u scheme.load -u scheme.process-context -u scheme.r5rs -u scheme.read -u scheme.repl -u scheme.time -u scheme.write "${@}"
!!

<< execute / python
	exec -- python2 -E -O -O -B -u "${@}"
!!

<< execute / rust-fmt
		( rust-fmt "${@}" 2> /dev/null || true ) \
		| sed -r -n \
				-e ': b' \
				-e '/^$/ d' \
				-e '/^\#\[macro_use\]$/ d' \
				-e '/^\#\[macro_export\]$/ d' \
				-e '/^\#\[allow\(unused_macros\)\]$/ d' \
				-e '/^macro_rules!/ b d' \
				-e 'p' \
				-e 'b' \
				-e ': d' -e 'n' -e '/^ +/! b b' -e 'b d' \
		#
!!

<< execute / test / all / benchmark
	x-run ':: compile / test / all / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --release --all-features --jobs 1 -- --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / all / coverage / kcov
	x-run ':: compile / test / all / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo kcov --no-clean-rebuild --no-default-features --jobs 1 --output ./target/kcov -- "${@}"
!!

<< execute / test / all / debug
	x-run ':: compile / test / all / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --no-default-features --jobs 1 -- --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / all / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / all / debug' "${@}"
!!

<< execute / test / all / release
	x-run ':: compile / test / all / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --release --all-features --jobs 1 -- --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / low-level-assertions / benchmarks / all / debug
	x-run ':: compile / test / low-level-assertions / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-assertions' --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / low-level-assertions / benchmarks / all / release
	x-run ':: compile / test / low-level-assertions / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test 'low-level-assertions' --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / low-level-assertions / coverage / all / kcov
	x-run ':: compile / test / low-level-assertions / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo kcov --test 'low-level-assertions' --no-clean-rebuild --no-default-features --jobs 1 --output ./target/kcov -- "${@}"
!!

<< execute / test / low-level-assertions / tests / all / debug
	x-run ':: compile / test / low-level-assertions / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-assertions' --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / low-level-assertions / tests / all / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / low-level-assertions / tests / all / debug' "${@}"
!!

<< execute / test / low-level-assertions / tests / all / release
	x-run ':: compile / test / low-level-assertions / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-assertions' --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / low-level-parser / benchmarks / all / debug
	x-run ':: compile / test / low-level-parser / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-parser' --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / low-level-parser / benchmarks / all / release
	x-run ':: compile / test / low-level-parser / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test 'low-level-parser' --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / low-level-parser / coverage / all / kcov
	x-run ':: compile / test / low-level-parser / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo kcov --test 'low-level-parser' --no-clean-rebuild --no-default-features --jobs 1 --output ./target/kcov -- "${@}"
!!

<< execute / test / low-level-parser / tests / all / debug
	x-run ':: compile / test / low-level-parser / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-parser' --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / low-level-parser / tests / all / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / low-level-parser / tests / all / debug' "${@}"
!!

<< execute / test / low-level-parser / tests / all / release
	x-run ':: compile / test / low-level-parser / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-parser' --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / low-level-r7rs / benchmarks / all / debug
	x-run ':: compile / test / low-level-r7rs / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-r7rs' --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / low-level-r7rs / benchmarks / all / release
	x-run ':: compile / test / low-level-r7rs / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test 'low-level-r7rs' --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / low-level-r7rs / coverage / all / kcov
	x-run ':: compile / test / low-level-r7rs / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo kcov --test 'low-level-r7rs' --no-clean-rebuild --no-default-features --jobs 1 --output ./target/kcov -- "${@}"
!!

<< execute / test / low-level-r7rs / tests / all / debug
	x-run ':: compile / test / low-level-r7rs / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-r7rs' --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / low-level-r7rs / tests / all / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / low-level-r7rs / tests / all / debug' "${@}"
!!

<< execute / test / low-level-r7rs / tests / all / release
	x-run ':: compile / test / low-level-r7rs / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-r7rs' --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / low-level-sizes / benchmarks / all / debug
	x-run ':: compile / test / low-level-sizes / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-sizes' --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / low-level-sizes / benchmarks / all / release
	x-run ':: compile / test / low-level-sizes / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test 'low-level-sizes' --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / low-level-sizes / coverage / all / kcov
	x-run ':: compile / test / low-level-sizes / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo kcov --test 'low-level-sizes' --no-clean-rebuild --no-default-features --jobs 1 --output ./target/kcov -- "${@}"
!!

<< execute / test / low-level-sizes / tests / all / debug
	x-run ':: compile / test / low-level-sizes / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-sizes' --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / low-level-sizes / tests / all / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / low-level-sizes / tests / all / debug' "${@}"
!!

<< execute / test / low-level-sizes / tests / all / release
	x-run ':: compile / test / low-level-sizes / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test 'low-level-sizes' --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / scheme / benchmarks / all / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test 'scheme' --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / scheme / benchmarks / all / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test 'scheme' --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__' "${@}"
!!

<< execute / test / scheme / benchmarks / arithmetic / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__arithmetic' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / arithmetic / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__arithmetic' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / arrays / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__arrays' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / arrays / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__arrays' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / booleans / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__booleans' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / booleans / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__booleans' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / bytes / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__bytes' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / bytes / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__bytes' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_by_identity / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_by_identity' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_by_identity / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_by_identity' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_by_value_coerced / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_by_value_coerced' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_by_value_coerced / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_by_value_coerced' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_by_value_coerced_recursive / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_by_value_coerced_recursive' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_by_value_coerced_recursive / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_by_value_coerced_recursive' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_by_value_strict / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_by_value_strict' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_by_value_strict / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_by_value_strict' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_by_value_strict_recursive / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_by_value_strict_recursive' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_by_value_strict_recursive / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_by_value_strict_recursive' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_objects / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_objects' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_equivalent_objects / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_equivalent_objects' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_ordering_numbers / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_ordering_numbers' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_ordering_numbers / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_ordering_numbers' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_ordering_objects / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_ordering_objects' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / comparisons_ordering_objects / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__comparisons_ordering_objects' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / contexts / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__contexts' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / contexts / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__contexts' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / control / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__control' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / control / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__control' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / functions / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__functions' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / functions / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__functions' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / functions_arrays / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__functions_arrays' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / functions_arrays / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__functions_arrays' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / functions_bytes / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__functions_bytes' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / functions_bytes / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__functions_bytes' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / functions_lists / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__functions_lists' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / functions_lists / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__functions_lists' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / functions_strings / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__functions_strings' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / functions_strings / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__functions_strings' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / issues / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__issues' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / issues / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__issues' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / lambdas / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__lambdas' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / lambdas / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__lambdas' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / lists / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__lists' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / lists / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__lists' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / loops / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__loops' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / loops / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__loops' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / pairs / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__pairs' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / pairs / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__pairs' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / ports / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__ports' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / ports / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__ports' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / ports_memory / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__ports_memory' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / ports_memory / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__ports_memory' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / ports_native / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__ports_native' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / ports_native / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__ports_native' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / processes / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__processes' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / processes / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__processes' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / quotation / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__quotation' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / quotation / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__quotation' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / runtime / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__runtime' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / runtime / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__runtime' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / scratchpad / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__scratchpad' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / scratchpad / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__scratchpad' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / strings / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__strings' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / strings / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__strings' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / types / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__types' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / types / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__types' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / values / debug
	x-run ':: compile / test / scheme / debug' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__values' --exact "${@}"
!!

<< execute / test / scheme / benchmarks / values / release
	x-run ':: compile / test / scheme / release' ; exec -- taskset -c 2 env PATH="${RUST_PATH}" VONUVOLI_SCHEME_BENCHMARKS_OUTPUT='./tests/scheme/_out/{IDENTIFIER}.out' cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --bench 'benchmark__values' --exact "${@}"
!!

<< execute / test / scheme / coverage / all / kcov
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo kcov --test 'scheme' --no-clean-rebuild --no-default-features --jobs 1 --output ./target/kcov -- "${@}"
!!

<< execute / test / scheme / tests / all / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test 'scheme' --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / scheme / tests / all / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / tests / all / debug' "${@}"
!!

<< execute / test / scheme / tests / all / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test 'scheme' --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__' "${@}"
!!

<< execute / test / scheme / tests / arithmetic / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__arithmetic' --exact "${@}"
!!

<< execute / test / scheme / tests / arithmetic / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / arithmetic / debug' "${@}"
!!

<< execute / test / scheme / tests / arithmetic / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__arithmetic' --exact "${@}"
!!

<< execute / test / scheme / tests / arrays / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__arrays' --exact "${@}"
!!

<< execute / test / scheme / tests / arrays / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / arrays / debug' "${@}"
!!

<< execute / test / scheme / tests / arrays / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__arrays' --exact "${@}"
!!

<< execute / test / scheme / tests / booleans / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__booleans' --exact "${@}"
!!

<< execute / test / scheme / tests / booleans / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / booleans / debug' "${@}"
!!

<< execute / test / scheme / tests / booleans / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__booleans' --exact "${@}"
!!

<< execute / test / scheme / tests / bytes / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__bytes' --exact "${@}"
!!

<< execute / test / scheme / tests / bytes / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / bytes / debug' "${@}"
!!

<< execute / test / scheme / tests / bytes / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__bytes' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_identity / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_by_identity' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_identity / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / comparisons_equivalent_by_identity / debug' "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_identity / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_by_identity' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_coerced / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_by_value_coerced' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_coerced / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / comparisons_equivalent_by_value_coerced / debug' "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_coerced / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_by_value_coerced' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_coerced_recursive / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_by_value_coerced_recursive' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_coerced_recursive / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / comparisons_equivalent_by_value_coerced_recursive / debug' "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_coerced_recursive / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_by_value_coerced_recursive' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_strict / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_by_value_strict' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_strict / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / comparisons_equivalent_by_value_strict / debug' "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_strict / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_by_value_strict' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_strict_recursive / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_by_value_strict_recursive' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_strict_recursive / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / comparisons_equivalent_by_value_strict_recursive / debug' "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_by_value_strict_recursive / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_by_value_strict_recursive' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_objects / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_objects' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_objects / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / comparisons_equivalent_objects / debug' "${@}"
!!

<< execute / test / scheme / tests / comparisons_equivalent_objects / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_equivalent_objects' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_ordering_numbers / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_ordering_numbers' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_ordering_numbers / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / comparisons_ordering_numbers / debug' "${@}"
!!

<< execute / test / scheme / tests / comparisons_ordering_numbers / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_ordering_numbers' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_ordering_objects / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_ordering_objects' --exact "${@}"
!!

<< execute / test / scheme / tests / comparisons_ordering_objects / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / comparisons_ordering_objects / debug' "${@}"
!!

<< execute / test / scheme / tests / comparisons_ordering_objects / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__comparisons_ordering_objects' --exact "${@}"
!!

<< execute / test / scheme / tests / contexts / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__contexts' --exact "${@}"
!!

<< execute / test / scheme / tests / contexts / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / contexts / debug' "${@}"
!!

<< execute / test / scheme / tests / contexts / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__contexts' --exact "${@}"
!!

<< execute / test / scheme / tests / control / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__control' --exact "${@}"
!!

<< execute / test / scheme / tests / control / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / control / debug' "${@}"
!!

<< execute / test / scheme / tests / control / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__control' --exact "${@}"
!!

<< execute / test / scheme / tests / functions / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__functions' --exact "${@}"
!!

<< execute / test / scheme / tests / functions / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / functions / debug' "${@}"
!!

<< execute / test / scheme / tests / functions / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__functions' --exact "${@}"
!!

<< execute / test / scheme / tests / functions_arrays / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__functions_arrays' --exact "${@}"
!!

<< execute / test / scheme / tests / functions_arrays / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / functions_arrays / debug' "${@}"
!!

<< execute / test / scheme / tests / functions_arrays / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__functions_arrays' --exact "${@}"
!!

<< execute / test / scheme / tests / functions_bytes / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__functions_bytes' --exact "${@}"
!!

<< execute / test / scheme / tests / functions_bytes / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / functions_bytes / debug' "${@}"
!!

<< execute / test / scheme / tests / functions_bytes / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__functions_bytes' --exact "${@}"
!!

<< execute / test / scheme / tests / functions_lists / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__functions_lists' --exact "${@}"
!!

<< execute / test / scheme / tests / functions_lists / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / functions_lists / debug' "${@}"
!!

<< execute / test / scheme / tests / functions_lists / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__functions_lists' --exact "${@}"
!!

<< execute / test / scheme / tests / functions_strings / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__functions_strings' --exact "${@}"
!!

<< execute / test / scheme / tests / functions_strings / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / functions_strings / debug' "${@}"
!!

<< execute / test / scheme / tests / functions_strings / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__functions_strings' --exact "${@}"
!!

<< execute / test / scheme / tests / issues / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__issues' --exact "${@}"
!!

<< execute / test / scheme / tests / issues / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / issues / debug' "${@}"
!!

<< execute / test / scheme / tests / issues / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__issues' --exact "${@}"
!!

<< execute / test / scheme / tests / lambdas / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__lambdas' --exact "${@}"
!!

<< execute / test / scheme / tests / lambdas / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / lambdas / debug' "${@}"
!!

<< execute / test / scheme / tests / lambdas / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__lambdas' --exact "${@}"
!!

<< execute / test / scheme / tests / lists / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__lists' --exact "${@}"
!!

<< execute / test / scheme / tests / lists / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / lists / debug' "${@}"
!!

<< execute / test / scheme / tests / lists / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__lists' --exact "${@}"
!!

<< execute / test / scheme / tests / loops / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__loops' --exact "${@}"
!!

<< execute / test / scheme / tests / loops / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / loops / debug' "${@}"
!!

<< execute / test / scheme / tests / loops / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__loops' --exact "${@}"
!!

<< execute / test / scheme / tests / pairs / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__pairs' --exact "${@}"
!!

<< execute / test / scheme / tests / pairs / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / pairs / debug' "${@}"
!!

<< execute / test / scheme / tests / pairs / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__pairs' --exact "${@}"
!!

<< execute / test / scheme / tests / ports / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__ports' --exact "${@}"
!!

<< execute / test / scheme / tests / ports / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / ports / debug' "${@}"
!!

<< execute / test / scheme / tests / ports / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__ports' --exact "${@}"
!!

<< execute / test / scheme / tests / ports_memory / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__ports_memory' --exact "${@}"
!!

<< execute / test / scheme / tests / ports_memory / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / ports_memory / debug' "${@}"
!!

<< execute / test / scheme / tests / ports_memory / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__ports_memory' --exact "${@}"
!!

<< execute / test / scheme / tests / ports_native / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__ports_native' --exact "${@}"
!!

<< execute / test / scheme / tests / ports_native / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / ports_native / debug' "${@}"
!!

<< execute / test / scheme / tests / ports_native / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__ports_native' --exact "${@}"
!!

<< execute / test / scheme / tests / processes / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__processes' --exact "${@}"
!!

<< execute / test / scheme / tests / processes / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / processes / debug' "${@}"
!!

<< execute / test / scheme / tests / processes / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__processes' --exact "${@}"
!!

<< execute / test / scheme / tests / quotation / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__quotation' --exact "${@}"
!!

<< execute / test / scheme / tests / quotation / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / quotation / debug' "${@}"
!!

<< execute / test / scheme / tests / quotation / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__quotation' --exact "${@}"
!!

<< execute / test / scheme / tests / runtime / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__runtime' --exact "${@}"
!!

<< execute / test / scheme / tests / runtime / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / runtime / debug' "${@}"
!!

<< execute / test / scheme / tests / runtime / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__runtime' --exact "${@}"
!!

<< execute / test / scheme / tests / scratchpad / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__scratchpad' --exact "${@}"
!!

<< execute / test / scheme / tests / scratchpad / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / scratchpad / debug' "${@}"
!!

<< execute / test / scheme / tests / scratchpad / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__scratchpad' --exact "${@}"
!!

<< execute / test / scheme / tests / strings / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__strings' --exact "${@}"
!!

<< execute / test / scheme / tests / strings / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / strings / debug' "${@}"
!!

<< execute / test / scheme / tests / strings / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__strings' --exact "${@}"
!!

<< execute / test / scheme / tests / types / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__types' --exact "${@}"
!!

<< execute / test / scheme / tests / types / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / types / debug' "${@}"
!!

<< execute / test / scheme / tests / types / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__types' --exact "${@}"
!!

<< execute / test / scheme / tests / values / debug
	x-run ':: compile / test / scheme / debug' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --no-default-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__values' --exact "${@}"
!!

<< execute / test / scheme / tests / values / debug / watch
	exec -- x-run ':: execute / watch' x-run ':: execute / test / scheme / values / debug' "${@}"
!!

<< execute / test / scheme / tests / values / release
	x-run ':: compile / test / scheme / release' ; exec -- nice -n 19 -- env PATH="${RUST_PATH}" cargo test --quiet --test scheme --release --all-features --jobs 1 -- --nocapture --test-threads 1 --test 'test__values' --exact "${@}"
!!

<< execute / watch
		test "${#}" -ge 1
		while true ; do
			_timestamp_previous="$( find ./sources/ ./tests/ -printf '%T+\n' | LC_ALL=C sort | tail -n 1 )"
			if ! "${@}" 2>&1 < /dev/null | tee "./target/x-run--watch--${$}.txt" ; then
				less -- "./target/x-run--watch--${$}.txt"
			else
				rm -- "./target/x-run--watch--${$}.txt"
			fi
			printf '\n[--]\n' >&2
			while sleep 0.5s ; do
				_timestamp_current="$( find ./sources/ ./tests/ -printf '%T+\n' | LC_ALL=C sort | tail -n 1 )"
				if test "${_timestamp_previous}" != "${_timestamp_current}" ; then
					break
				fi
			done
			printf '\n[--]\n\n' >&2
		done
!!

<< files / edit / bin_bencher.rs
	exec -- sce ./sources/bin_bencher.rs
!!

<< files / edit / bin_compiler.rs
	exec -- sce ./sources/bin_compiler.rs
!!

<< files / edit / bin_interpreter.rs
	exec -- sce ./sources/bin_interpreter.rs
!!

<< files / edit / bin_tester.rs
	exec -- sce ./sources/bin_tester.rs
!!

<< files / edit / builtins.rs
	exec -- sce ./sources/builtins.rs
!!

<< files / edit / builtins_arrays.rs
	exec -- sce ./sources/builtins_arrays.rs
!!

<< files / edit / builtins_bytes.rs
	exec -- sce ./sources/builtins_bytes.rs
!!

<< files / edit / builtins_comparisons.rs
	exec -- sce ./sources/builtins_comparisons.rs
!!

<< files / edit / builtins_functions.rs
	exec -- sce ./sources/builtins_functions.rs
!!

<< files / edit / builtins_lists.rs
	exec -- sce ./sources/builtins_lists.rs
!!

<< files / edit / builtins_ports.rs
	exec -- sce ./sources/builtins_ports.rs
!!

<< files / edit / builtins_processes.rs
	exec -- sce ./sources/builtins_processes.rs
!!

<< files / edit / builtins_runtime.rs
	exec -- sce ./sources/builtins_runtime.rs
!!

<< files / edit / builtins_strings.rs
	exec -- sce ./sources/builtins_strings.rs
!!

<< files / edit / builtins_types.rs
	exec -- sce ./sources/builtins_types.rs
!!

<< files / edit / compiler.rs
	exec -- sce ./sources/compiler.rs
!!

<< files / edit / compiler_optimizer.rs
	exec -- sce ./sources/compiler_optimizer.rs
!!

<< files / edit / constants.rs
	exec -- sce ./sources/constants.rs
!!

<< files / edit / contexts.rs
	exec -- sce ./sources/contexts.rs
!!

<< files / edit / conversions.rs
	exec -- sce ./sources/conversions.rs
!!

<< files / edit / counters.rs
	exec -- sce ./sources/counters.rs
!!

<< files / edit / display.rs
	exec -- sce ./sources/display.rs
!!

<< files / edit / errors.rs
	exec -- sce ./sources/errors.rs
!!

<< files / edit / evaluator.rs
	exec -- sce ./sources/evaluator.rs
!!

<< files / edit / expressions.rs
	exec -- sce ./sources/expressions.rs
!!

<< files / edit / extended_procedures.rs
	exec -- sce ./sources/extended_procedures.rs
!!

<< files / edit / extended_syntaxes.rs
	exec -- sce ./sources/extended_syntaxes.rs
!!

<< files / edit / globals.rs
	exec -- sce ./sources/globals.rs
!!

<< files / edit / hashes.rs
	exec -- sce ./sources/hashes.rs
!!

<< files / edit / lambdas.rs
	exec -- sce ./sources/lambdas.rs
!!

<< files / edit / languages.rs
	exec -- sce ./sources/languages.rs
!!

<< files / edit / languages_builtins.rs
	exec -- sce ./sources/languages_builtins.rs
!!

<< files / edit / languages_r7rs.rs
	exec -- sce ./sources/languages_r7rs.rs
!!

<< files / edit / lib.rs
	exec -- sce ./sources/lib.rs
!!

<< files / edit / low-level-assertions.rs
	exec -- sce ./tests/low-level-assertions.rs
!!

<< files / edit / low-level-parser.rs
	exec -- sce ./tests/low-level-parser.rs
!!

<< files / edit / low-level-r7rs.rs
	exec -- sce ./tests/low-level-r7rs.rs
!!

<< files / edit / low-level-sizes.rs
	exec -- sce ./tests/low-level-sizes.rs
!!

<< files / edit / macros.in
	exec -- sce ./sources/macros.in
!!

<< files / edit / native_procedures.rs
	exec -- sce ./sources/native_procedures.rs
!!

<< files / edit / native_syntaxes.rs
	exec -- sce ./sources/native_syntaxes.rs
!!

<< files / edit / ordering.rs
	exec -- sce ./sources/ordering.rs
!!

<< files / edit / parser.rs
	exec -- sce ./sources/parser.rs
!!

<< files / edit / parser_peg.rs
	exec -- sce ./sources/parser_peg.rs
!!

<< files / edit / ports.rs
	exec -- sce ./sources/ports.rs
!!

<< files / edit / ports_memory.rs
	exec -- sce ./sources/ports_memory.rs
!!

<< files / edit / ports_native.rs
	exec -- sce ./sources/ports_native.rs
!!

<< files / edit / prelude.in
	exec -- sce ./tests/prelude.in
!!

<< files / edit / prelude.rs
	exec -- sce ./sources/prelude.rs
!!

<< files / edit / primitives.rs
	exec -- sce ./sources/primitives.rs
!!

<< files / edit / primitives_arithmetic.rs
	exec -- sce ./sources/primitives_arithmetic.rs
!!

<< files / edit / primitives_arrays.rs
	exec -- sce ./sources/primitives_arrays.rs
!!

<< files / edit / primitives_bitwise.rs
	exec -- sce ./sources/primitives_bitwise.rs
!!

<< files / edit / primitives_boolean.rs
	exec -- sce ./sources/primitives_boolean.rs
!!

<< files / edit / primitives_bytes.rs
	exec -- sce ./sources/primitives_bytes.rs
!!

<< files / edit / primitives_comparisons.rs
	exec -- sce ./sources/primitives_comparisons.rs
!!

<< files / edit / primitives_functions.rs
	exec -- sce ./sources/primitives_functions.rs
!!

<< files / edit / primitives_lists.rs
	exec -- sce ./sources/primitives_lists.rs
!!

<< files / edit / primitives_ports.rs
	exec -- sce ./sources/primitives_ports.rs
!!

<< files / edit / primitives_procedures.rs
	exec -- sce ./sources/primitives_procedures.rs
!!

<< files / edit / primitives_runtime.rs
	exec -- sce ./sources/primitives_runtime.rs
!!

<< files / edit / primitives_strings.rs
	exec -- sce ./sources/primitives_strings.rs
!!

<< files / edit / primitives_syntaxes.rs
	exec -- sce ./sources/primitives_syntaxes.rs
!!

<< files / edit / primitives_types.rs
	exec -- sce ./sources/primitives_types.rs
!!

<< files / edit / processes.rs
	exec -- sce ./sources/processes.rs
!!

<< files / edit / runtime.rs
	exec -- sce ./sources/runtime.rs
!!

<< files / edit / runtime_configurations.rs
	exec -- sce ./sources/runtime_configurations.rs
!!

<< files / edit / runtime_iterators.rs
	exec -- sce ./sources/runtime_iterators.rs
!!

<< files / edit / runtime_unicode.rs
	exec -- sce ./sources/runtime_unicode.rs
!!

<< files / edit / scheme.rs
	exec -- sce ./tests/scheme.rs
!!

<< files / edit / scheme/arithmetic.sst
	exec -- sce ./tests/scheme/arithmetic.sst
!!

<< files / edit / scheme/arrays.sst
	exec -- sce ./tests/scheme/arrays.sst
!!

<< files / edit / scheme/booleans.sst
	exec -- sce ./tests/scheme/booleans.sst
!!

<< files / edit / scheme/bytes.sst
	exec -- sce ./tests/scheme/bytes.sst
!!

<< files / edit / scheme/comparisons-equivalent-by-identity.sst
	exec -- sce ./tests/scheme/comparisons-equivalent-by-identity.sst
!!

<< files / edit / scheme/comparisons-equivalent-by-value-coerced-recursive.sst
	exec -- sce ./tests/scheme/comparisons-equivalent-by-value-coerced-recursive.sst
!!

<< files / edit / scheme/comparisons-equivalent-by-value-coerced.sst
	exec -- sce ./tests/scheme/comparisons-equivalent-by-value-coerced.sst
!!

<< files / edit / scheme/comparisons-equivalent-by-value-strict-recursive.sst
	exec -- sce ./tests/scheme/comparisons-equivalent-by-value-strict-recursive.sst
!!

<< files / edit / scheme/comparisons-equivalent-by-value-strict.sst
	exec -- sce ./tests/scheme/comparisons-equivalent-by-value-strict.sst
!!

<< files / edit / scheme/comparisons-equivalent-objects.sst
	exec -- sce ./tests/scheme/comparisons-equivalent-objects.sst
!!

<< files / edit / scheme/comparisons-ordering-numbers.sst
	exec -- sce ./tests/scheme/comparisons-ordering-numbers.sst
!!

<< files / edit / scheme/comparisons-ordering-objects.sst
	exec -- sce ./tests/scheme/comparisons-ordering-objects.sst
!!

<< files / edit / scheme/contexts.sst
	exec -- sce ./tests/scheme/contexts.sst
!!

<< files / edit / scheme/control.sst
	exec -- sce ./tests/scheme/control.sst
!!

<< files / edit / scheme/functions-arrays.sst
	exec -- sce ./tests/scheme/functions-arrays.sst
!!

<< files / edit / scheme/functions-bytes.sst
	exec -- sce ./tests/scheme/functions-bytes.sst
!!

<< files / edit / scheme/functions-lists.sst
	exec -- sce ./tests/scheme/functions-lists.sst
!!

<< files / edit / scheme/functions-strings.sst
	exec -- sce ./tests/scheme/functions-strings.sst
!!

<< files / edit / scheme/functions.sst
	exec -- sce ./tests/scheme/functions.sst
!!

<< files / edit / scheme/issues.sst
	exec -- sce ./tests/scheme/issues.sst
!!

<< files / edit / scheme/lambdas.sst
	exec -- sce ./tests/scheme/lambdas.sst
!!

<< files / edit / scheme/lists.sst
	exec -- sce ./tests/scheme/lists.sst
!!

<< files / edit / scheme/loops.sst
	exec -- sce ./tests/scheme/loops.sst
!!

<< files / edit / scheme/pairs.sst
	exec -- sce ./tests/scheme/pairs.sst
!!

<< files / edit / scheme/ports-memory.sst
	exec -- sce ./tests/scheme/ports-memory.sst
!!

<< files / edit / scheme/ports-native.sst
	exec -- sce ./tests/scheme/ports-native.sst
!!

<< files / edit / scheme/ports.sst
	exec -- sce ./tests/scheme/ports.sst
!!

<< files / edit / scheme/processes.sst
	exec -- sce ./tests/scheme/processes.sst
!!

<< files / edit / scheme/quotation.sst
	exec -- sce ./tests/scheme/quotation.sst
!!

<< files / edit / scheme/runtime.sst
	exec -- sce ./tests/scheme/runtime.sst
!!

<< files / edit / scheme/scratchpad.sst
	exec -- sce ./tests/scheme/scratchpad.sst
!!

<< files / edit / scheme/strings.sst
	exec -- sce ./tests/scheme/strings.sst
!!

<< files / edit / scheme/types.sst
	exec -- sce ./tests/scheme/types.sst
!!

<< files / edit / scheme/values.sst
	exec -- sce ./tests/scheme/values.sst
!!

<< files / edit / tests.rs
	exec -- sce ./sources/tests.rs
!!

<< files / edit / values.rs
	exec -- sce ./sources/values.rs
!!

<< files / edit / values_arrays.rs
	exec -- sce ./sources/values_arrays.rs
!!

<< files / edit / values_booleans.rs
	exec -- sce ./sources/values_booleans.rs
!!

<< files / edit / values_bytes.rs
	exec -- sce ./sources/values_bytes.rs
!!

<< files / edit / values_characters.rs
	exec -- sce ./sources/values_characters.rs
!!

<< files / edit / values_numbers.rs
	exec -- sce ./sources/values_numbers.rs
!!

<< files / edit / values_pairs.rs
	exec -- sce ./sources/values_pairs.rs
!!

<< files / edit / values_strings.rs
	exec -- sce ./sources/values_strings.rs
!!

<< files / edit / values_symbols.rs
	exec -- sce ./sources/values_symbols.rs
!!

<< files / edit / values_value.rs
	exec -- sce ./sources/values_value.rs
!!

<< files / edit / values_values.rs
	exec -- sce ./sources/values_values.rs
!!

<< files / grep / outputs / benchmarks
	git diff --color-words -U0 -- ./tests/scheme/_out/benchmark__* | grep -E -e '^....--' -e 'average.*/' | sed -r -e 's/^(....)--- i\/tests\/scheme\/_out\/benchmark__/\1/'
!!

<< files / grep / sources / builtins / unimplemented / show
	exec -- git grep --no-index -C10 -P -e 'unimplemented!(?!.*// (deferred|OK)$)' -- './sources/builtins*.rs'
!!

<< files / grep / sources / errors / duplicates / list
	grep -o -P -e '(?<=0x)[0-9a-f]{8}(?=[)])|(?<=")[0-9a-f]{8}(?=")' -h -r ./sources -r ./tests --include '*.rs' --include '*.in' | sort | uniq -d
!!

<< files / grep / sources / errors / duplicates / show
	x-run ':: files / grep / sources / errors / duplicates / list' | git grep --no-index -C0 -F -f /dev/stdin -- ./sources ./tests
!!

<< files / grep / sources / errors / improper / list
	grep -o -P -e '(?<=0x)([0-9a-f]{3,7}|[0-9a-f]{9,})(?=[)])|(?<=")([0-9a-f]{3,7}|[0-9a-f]{9,})(?=")' -h -r ./sources -r ./tests --include '*.rs' --include '*.in' | sort -u
!!

<< files / grep / sources / errors / improper / show
	x-run ':: files / grep / sources / errors / improper / list' | git grep --no-index -C2 -F -f /dev/stdin -- ./sources ./tests
!!

<< files / grep / sources / primitives / unimplemented / show
	exec -- git grep --no-index -C10 -P -e 'unimplemented!(?!.*// (deferred|OK)$)' -- './sources/primitives*.rs'
!!

<< files / grep / sources / regexp
	exec -- git grep --no-index -C10 -P "${@/#/-e}" -- ./sources
!!

<< files / grep / sources / string
	exec -- git grep --no-index -C10 -F "${@/#/-e}" -- ./sources
!!

<< files / grep / sources / unimplemented / list
	exec -- git grep --no-index -l -P -e 'unimplemented!(?!.*// (deferred|OK)$)' -- ./sources
!!

<< files / grep / sources / unimplemented / show
	exec -- git grep --no-index -C10 -P -e 'unimplemented!(?!.*// (deferred|OK)$)' -- ./sources
!!

<< files / grep / sources / x-selection / primary
	exec -- git grep --no-index -C10 -F -e "$( exec -- x-selection primary output )" -- ./sources
!!

<< files / sed / sources / inline-always / configurable
	exec -- find ./sources ./tests -xdev -type f \( -name '*.rs' -o -name '*.in' \) -exec sed -r -e 's!^(\s*)(#\[ inline \(always\) \])$!\1#[ cfg_attr ( feature = "vonuvoli_inline", inline (always) ) ]!' -i -- {} \;
!!

<< files / sed / sources / inline-always / disable
	exec -- find ./sources ./tests -xdev -type f \( -name '*.rs' -o -name '*.in' \) -exec sed -r -e 's!^(\s*)(#\[ inline \(always\) \])$!\1#[ inline (never) ] // __inline_always__!' -i -- {} \;
!!

<< files / sed / sources / inline-always / enable
	exec -- find ./sources ./tests -xdev -type f \( -name '*.rs' -o -name '*.in' \) -exec sed -r -e 's!^(\s*)(#\[ inline \(never\) \] // __inline_always__)$!\1#[ inline (always) ]!' -i -- {} \;
!!

<< files / sed / sources / inline-always / to-plain
	exec -- find ./sources ./tests -xdev -type f \( -name '*.rs' -o -name '*.in' \) -exec sed -r -e 's!^(\s*)(#\[ inline \(always\) \])$!\1#[ inline ]!' -e 's!^(\s*)(#\[ cfg_attr \( feature = "vonuvoli_inline", inline \(always\) \) \])$!\1#[ cfg_attr ( feature = "vonuvoli_inline", inline ) ]!' -i -- {} \;
!!

<< files / view / bin_bencher.rs
	exec -- less -- ./sources/bin_bencher.rs
!!

<< files / view / bin_compiler.rs
	exec -- less -- ./sources/bin_compiler.rs
!!

<< files / view / bin_interpreter.rs
	exec -- less -- ./sources/bin_interpreter.rs
!!

<< files / view / bin_tester.rs
	exec -- less -- ./sources/bin_tester.rs
!!

<< files / view / builtins.rs
	exec -- less -- ./sources/builtins.rs
!!

<< files / view / builtins_arrays.rs
	exec -- less -- ./sources/builtins_arrays.rs
!!

<< files / view / builtins_bytes.rs
	exec -- less -- ./sources/builtins_bytes.rs
!!

<< files / view / builtins_comparisons.rs
	exec -- less -- ./sources/builtins_comparisons.rs
!!

<< files / view / builtins_functions.rs
	exec -- less -- ./sources/builtins_functions.rs
!!

<< files / view / builtins_lists.rs
	exec -- less -- ./sources/builtins_lists.rs
!!

<< files / view / builtins_ports.rs
	exec -- less -- ./sources/builtins_ports.rs
!!

<< files / view / builtins_processes.rs
	exec -- less -- ./sources/builtins_processes.rs
!!

<< files / view / builtins_runtime.rs
	exec -- less -- ./sources/builtins_runtime.rs
!!

<< files / view / builtins_strings.rs
	exec -- less -- ./sources/builtins_strings.rs
!!

<< files / view / builtins_types.rs
	exec -- less -- ./sources/builtins_types.rs
!!

<< files / view / compiler.rs
	exec -- less -- ./sources/compiler.rs
!!

<< files / view / compiler_optimizer.rs
	exec -- less -- ./sources/compiler_optimizer.rs
!!

<< files / view / constants.rs
	exec -- less -- ./sources/constants.rs
!!

<< files / view / contexts.rs
	exec -- less -- ./sources/contexts.rs
!!

<< files / view / conversions.rs
	exec -- less -- ./sources/conversions.rs
!!

<< files / view / counters.rs
	exec -- less -- ./sources/counters.rs
!!

<< files / view / display.rs
	exec -- less -- ./sources/display.rs
!!

<< files / view / errors.rs
	exec -- less -- ./sources/errors.rs
!!

<< files / view / evaluator.rs
	exec -- less -- ./sources/evaluator.rs
!!

<< files / view / expressions.rs
	exec -- less -- ./sources/expressions.rs
!!

<< files / view / extended_procedures.rs
	exec -- less -- ./sources/extended_procedures.rs
!!

<< files / view / extended_syntaxes.rs
	exec -- less -- ./sources/extended_syntaxes.rs
!!

<< files / view / globals.rs
	exec -- less -- ./sources/globals.rs
!!

<< files / view / hashes.rs
	exec -- less -- ./sources/hashes.rs
!!

<< files / view / lambdas.rs
	exec -- less -- ./sources/lambdas.rs
!!

<< files / view / languages.rs
	exec -- less -- ./sources/languages.rs
!!

<< files / view / languages_builtins.rs
	exec -- less -- ./sources/languages_builtins.rs
!!

<< files / view / languages_r7rs.rs
	exec -- less -- ./sources/languages_r7rs.rs
!!

<< files / view / lib.rs
	exec -- less -- ./sources/lib.rs
!!

<< files / view / low-level-assertions.rs
	exec -- less -- ./tests/low-level-assertions.rs
!!

<< files / view / low-level-parser.rs
	exec -- less -- ./tests/low-level-parser.rs
!!

<< files / view / low-level-r7rs.rs
	exec -- less -- ./tests/low-level-r7rs.rs
!!

<< files / view / low-level-sizes.rs
	exec -- less -- ./tests/low-level-sizes.rs
!!

<< files / view / macros.in
	exec -- less -- ./sources/macros.in
!!

<< files / view / native_procedures.rs
	exec -- less -- ./sources/native_procedures.rs
!!

<< files / view / native_syntaxes.rs
	exec -- less -- ./sources/native_syntaxes.rs
!!

<< files / view / ordering.rs
	exec -- less -- ./sources/ordering.rs
!!

<< files / view / parser.rs
	exec -- less -- ./sources/parser.rs
!!

<< files / view / parser_peg.rs
	exec -- less -- ./sources/parser_peg.rs
!!

<< files / view / ports.rs
	exec -- less -- ./sources/ports.rs
!!

<< files / view / ports_memory.rs
	exec -- less -- ./sources/ports_memory.rs
!!

<< files / view / ports_native.rs
	exec -- less -- ./sources/ports_native.rs
!!

<< files / view / prelude.in
	exec -- less -- ./tests/prelude.in
!!

<< files / view / prelude.rs
	exec -- less -- ./sources/prelude.rs
!!

<< files / view / primitives.rs
	exec -- less -- ./sources/primitives.rs
!!

<< files / view / primitives_arithmetic.rs
	exec -- less -- ./sources/primitives_arithmetic.rs
!!

<< files / view / primitives_arrays.rs
	exec -- less -- ./sources/primitives_arrays.rs
!!

<< files / view / primitives_bitwise.rs
	exec -- less -- ./sources/primitives_bitwise.rs
!!

<< files / view / primitives_boolean.rs
	exec -- less -- ./sources/primitives_boolean.rs
!!

<< files / view / primitives_bytes.rs
	exec -- less -- ./sources/primitives_bytes.rs
!!

<< files / view / primitives_comparisons.rs
	exec -- less -- ./sources/primitives_comparisons.rs
!!

<< files / view / primitives_functions.rs
	exec -- less -- ./sources/primitives_functions.rs
!!

<< files / view / primitives_lists.rs
	exec -- less -- ./sources/primitives_lists.rs
!!

<< files / view / primitives_ports.rs
	exec -- less -- ./sources/primitives_ports.rs
!!

<< files / view / primitives_procedures.rs
	exec -- less -- ./sources/primitives_procedures.rs
!!

<< files / view / primitives_runtime.rs
	exec -- less -- ./sources/primitives_runtime.rs
!!

<< files / view / primitives_strings.rs
	exec -- less -- ./sources/primitives_strings.rs
!!

<< files / view / primitives_syntaxes.rs
	exec -- less -- ./sources/primitives_syntaxes.rs
!!

<< files / view / primitives_types.rs
	exec -- less -- ./sources/primitives_types.rs
!!

<< files / view / processes.rs
	exec -- less -- ./sources/processes.rs
!!

<< files / view / runtime.rs
	exec -- less -- ./sources/runtime.rs
!!

<< files / view / runtime_configurations.rs
	exec -- less -- ./sources/runtime_configurations.rs
!!

<< files / view / runtime_iterators.rs
	exec -- less -- ./sources/runtime_iterators.rs
!!

<< files / view / runtime_unicode.rs
	exec -- less -- ./sources/runtime_unicode.rs
!!

<< files / view / scheme.rs
	exec -- less -- ./tests/scheme.rs
!!

<< files / view / scheme/arithmetic.sst
	exec -- less -- ./tests/scheme/arithmetic.sst
!!

<< files / view / scheme/arrays.sst
	exec -- less -- ./tests/scheme/arrays.sst
!!

<< files / view / scheme/booleans.sst
	exec -- less -- ./tests/scheme/booleans.sst
!!

<< files / view / scheme/bytes.sst
	exec -- less -- ./tests/scheme/bytes.sst
!!

<< files / view / scheme/comparisons-equivalent-by-identity.sst
	exec -- less -- ./tests/scheme/comparisons-equivalent-by-identity.sst
!!

<< files / view / scheme/comparisons-equivalent-by-value-coerced-recursive.sst
	exec -- less -- ./tests/scheme/comparisons-equivalent-by-value-coerced-recursive.sst
!!

<< files / view / scheme/comparisons-equivalent-by-value-coerced.sst
	exec -- less -- ./tests/scheme/comparisons-equivalent-by-value-coerced.sst
!!

<< files / view / scheme/comparisons-equivalent-by-value-strict-recursive.sst
	exec -- less -- ./tests/scheme/comparisons-equivalent-by-value-strict-recursive.sst
!!

<< files / view / scheme/comparisons-equivalent-by-value-strict.sst
	exec -- less -- ./tests/scheme/comparisons-equivalent-by-value-strict.sst
!!

<< files / view / scheme/comparisons-equivalent-objects.sst
	exec -- less -- ./tests/scheme/comparisons-equivalent-objects.sst
!!

<< files / view / scheme/comparisons-ordering-numbers.sst
	exec -- less -- ./tests/scheme/comparisons-ordering-numbers.sst
!!

<< files / view / scheme/comparisons-ordering-objects.sst
	exec -- less -- ./tests/scheme/comparisons-ordering-objects.sst
!!

<< files / view / scheme/contexts.sst
	exec -- less -- ./tests/scheme/contexts.sst
!!

<< files / view / scheme/control.sst
	exec -- less -- ./tests/scheme/control.sst
!!

<< files / view / scheme/functions-arrays.sst
	exec -- less -- ./tests/scheme/functions-arrays.sst
!!

<< files / view / scheme/functions-bytes.sst
	exec -- less -- ./tests/scheme/functions-bytes.sst
!!

<< files / view / scheme/functions-lists.sst
	exec -- less -- ./tests/scheme/functions-lists.sst
!!

<< files / view / scheme/functions-strings.sst
	exec -- less -- ./tests/scheme/functions-strings.sst
!!

<< files / view / scheme/functions.sst
	exec -- less -- ./tests/scheme/functions.sst
!!

<< files / view / scheme/issues.sst
	exec -- less -- ./tests/scheme/issues.sst
!!

<< files / view / scheme/lambdas.sst
	exec -- less -- ./tests/scheme/lambdas.sst
!!

<< files / view / scheme/lists.sst
	exec -- less -- ./tests/scheme/lists.sst
!!

<< files / view / scheme/loops.sst
	exec -- less -- ./tests/scheme/loops.sst
!!

<< files / view / scheme/pairs.sst
	exec -- less -- ./tests/scheme/pairs.sst
!!

<< files / view / scheme/ports-memory.sst
	exec -- less -- ./tests/scheme/ports-memory.sst
!!

<< files / view / scheme/ports-native.sst
	exec -- less -- ./tests/scheme/ports-native.sst
!!

<< files / view / scheme/ports.sst
	exec -- less -- ./tests/scheme/ports.sst
!!

<< files / view / scheme/processes.sst
	exec -- less -- ./tests/scheme/processes.sst
!!

<< files / view / scheme/quotation.sst
	exec -- less -- ./tests/scheme/quotation.sst
!!

<< files / view / scheme/runtime.sst
	exec -- less -- ./tests/scheme/runtime.sst
!!

<< files / view / scheme/scratchpad.sst
	exec -- less -- ./tests/scheme/scratchpad.sst
!!

<< files / view / scheme/strings.sst
	exec -- less -- ./tests/scheme/strings.sst
!!

<< files / view / scheme/types.sst
	exec -- less -- ./tests/scheme/types.sst
!!

<< files / view / scheme/values.sst
	exec -- less -- ./tests/scheme/values.sst
!!

<< files / view / tests.rs
	exec -- less -- ./sources/tests.rs
!!

<< files / view / values.rs
	exec -- less -- ./sources/values.rs
!!

<< files / view / values_arrays.rs
	exec -- less -- ./sources/values_arrays.rs
!!

<< files / view / values_booleans.rs
	exec -- less -- ./sources/values_booleans.rs
!!

<< files / view / values_bytes.rs
	exec -- less -- ./sources/values_bytes.rs
!!

<< files / view / values_characters.rs
	exec -- less -- ./sources/values_characters.rs
!!

<< files / view / values_numbers.rs
	exec -- less -- ./sources/values_numbers.rs
!!

<< files / view / values_pairs.rs
	exec -- less -- ./sources/values_pairs.rs
!!

<< files / view / values_strings.rs
	exec -- less -- ./sources/values_strings.rs
!!

<< files / view / values_symbols.rs
	exec -- less -- ./sources/values_symbols.rs
!!

<< files / view / values_value.rs
	exec -- less -- ./sources/values_value.rs
!!

<< files / view / values_values.rs
	exec -- less -- ./sources/values_values.rs
!!

<< workbench / cargo / install or upgrade
		test "${#}" -eq 0
		test -e ./.rust
		export -- RUSTUP_HOME="$( exec -- readlink -e -- ./.rust/rustup )"
		export -- CARGO_HOME="$( exec -- readlink -e -- ./.rust/cargo )"
		export -- PATH="${RUST_PATH}"
		nice -n 19 -- cargo install --force cargo-kcov
!!

<< workbench / cargo / update
		test "${#}" -eq 0
		test -e ./.rust
		export -- RUSTUP_HOME="$( exec -- readlink -e -- ./.rust/rustup )"
		export -- CARGO_HOME="$( exec -- readlink -e -- ./.rust/cargo )"
		export -- PATH="${RUST_PATH}"
		nice -n 19 -- cargo update
!!

<< workbench / python / initialize
		test "${#}" -eq 0
		test ! -e ./.python
		nice -n 19 -- virtualenv --python python2.7 -- ./.python
!!

<< workbench / python / install or upgrade
		test "${#}" -eq 0
		test -e ./.python
		# nice -n 19 -- ./.python/bin/pip install --force docutils
		nice -n 19 -- ./.python/bin/pip install --force restview
!!

<< workbench / rust-up / initialize
		test "${#}" -eq 0
		test ! -e ./.rust
		mkdir -- ./.rust
		mkdir -- ./.rust/rustup
		mkdir -- ./.rust/cargo
		curl -s -o ./.rust/rustup-init.tmp -- https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init
		chmod +x -- ./.rust/rustup-init.tmp
		mv -n -T -- ./.rust/rustup-init.tmp ./.rust/rustup-init
		export -- RUSTUP_HOME="$( exec -- readlink -e -- ./.rust/rustup )"
		export -- CARGO_HOME="$( exec -- readlink -e -- ./.rust/cargo )"
		nice -n 19 -- ./.rust/rustup-init -y --no-modify-path
!!

<< workbench / rust-up / install
		test "${#}" -eq 0
		test -e ./.rust
		export -- RUSTUP_HOME="$( exec -- readlink -e -- ./.rust/rustup )"
		export -- CARGO_HOME="$( exec -- readlink -e -- ./.rust/cargo )"
		nice -n 19 -- ./.rust/cargo/bin/rustup install stable
		nice -n 19 -- ./.rust/cargo/bin/rustup install nightly
!!

<< workbench / rust-up / upgrade
		test "${#}" -eq 0
		test -e ./.rust
		export -- RUSTUP_HOME="$( exec -- readlink -e -- ./.rust/rustup )"
		export -- CARGO_HOME="$( exec -- readlink -e -- ./.rust/cargo )"
		nice -n 19 -- ./.rust/cargo/bin/rustup update
!!

