
(begin) => #void;
(begin 0) => 0;
(begin 0 1) => 1;
(begin 0 1 2) => 2;




(if #t 1 2) => 1;
(if #f 1 2) => 2;

(if #t 1) => 1;
(if #f 1) => #void;

(if #null 1 2) => 1;
(if 0 1 2) => 1;
(if 1 2 3) => 2;




(when #t 0) => 0;
(when #t 0 1) => 1;
(when #t 0 1 2) => 2;
(when #f 0) => #void;
(when #f 0 1) => #void;
(when #f 0 1 2) => #void;

(when #null 0 1) => 1;
(when 0 1 2) => 2;
(when 1 2 3) => 3;

(unless #f 0) => 0;
(unless #f 0 1) => 1;
(unless #f 0 1 2) => 2;
(unless #t 0) => #void;
(unless #t 0 1) => #void;
(unless #t 0 1 2) => #void;

(unless #null 0 1) => #void;
(unless 0 1 2) => #void;
(unless 1 2 3) => #void;




(cond) => #void;
(cond (#t)) => #t;
(cond (#t 0)) => 0;
(cond (#t 0 1)) => 1;
(cond (#t 0 1 2)) => 2;
(cond (#f)) => #void;
(cond (#f 0)) => #void;
(cond (#f 0 1)) => #void;
(cond (#f 0 1 2)) => #void;

(cond (#t 0) (#t 1) (#t 2) (else 3)) => 0;
(cond (#f 0) (#t 1) (#t 2) (else 3)) => 1;
(cond (#f 0) (#f 1) (#t 2) (else 3)) => 2;
(cond (#f 0) (#f 1) (#f 2) (else 3)) => 3;

(cond (#null)) => #null;
(cond (0)) => 0;
(cond (1)) => 1;

(cond (#null 1)) => 1;
(cond (0 1 2)) => 2;
(cond (1 2 3)) => 3;

