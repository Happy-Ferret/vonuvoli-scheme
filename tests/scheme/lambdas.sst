
((lambda x x) 0) => '(0);
((lambda () 0)) => 0;
((lambda (x) x) 0) => 0;

((lambda (x) x) +) => +;

(begin (define l1 (locals (define x 0) (lambda a x))) 0) => 0;
(l1 0) => 0;
(l1 1) => 0;
(l1 2) => 0;


(begin
	(define l2
		(locals
			(define z1 1)
			(define z2 2)
			(define z 0)
			(lambda (x)
				(lambda (y) (+ x y z)))))
	(define l2+0 (l2 0))
	(define l2+1 (l2 1))
	((l2 0) 0))
=> 0;

(l2+0 0) => 0;
(l2+0 1) => 1;
(l2+1 0) => 1;
(l2+1 1) => 2;

