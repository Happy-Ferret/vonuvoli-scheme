
((lambda x x) 0) => '(0);
((lambda () 0)) => 0;
((lambda (x) x) 0) => 0;
((lambda (x y) x) 0 1) => 0;
((lambda (x y) y) 0 1) => 1;




(define f1
	(locals
		(define y 0)
		(lambda (x) (+ x y))
	))
=> !ignore;

(f1 0) => 0;
(f1 1) => 1;
(f1 2) => 2;




(begin
	(define f2
		(locals
			(define q1 1)
			(define q2 2)
			(define z 0)
			(lambda (y)
				(lambda (x) (+ x y z)))))
	(define f2+0 (f2 0))
	(define f2+1 (f2 1))
)
=> !ignore;

(f2+0 0) => 0;
(f2+0 1) => 1;
(f2+1 0) => 1;
(f2+1 1) => 2;




(define f3 (lambda (x) (define y x) y)) => !ignore;
(f3 0) => 0;




(define f4a1
	(lambda (m)
		(define r
			(lambda (n a)
				(if (zero? n)
					a
					(r (- n 1) (+ a m)))
			))
		(lambda (n) (r n 0))
	))
=> !ignore;

(define (f4a2 m)
	(define (r n a)
		(if (zero? n)
			a
			(r (- n 1) (+ a m))))
	(define (q n)
		(r n 0))
	q)
=> !ignore;

(define f4b
	(locals
		(define r
			(lambda (m n a)
				(if (zero? n)
					a
					(r m (- n 1) (+ a m)))
			))
		(lambda (m)
			(lambda (n) (r m n 0)))
	))
=> !ignore;

((f4a1 0) 0) => ((f4b 0) 0);
((f4a1 0) 1) => ((f4b 0) 1);
((f4a1 0) 2) => ((f4b 0) 2);
((f4a1 1) 0) => ((f4b 1) 0);
((f4a1 1) 1) => ((f4b 1) 1);
((f4a1 1) 2) => ((f4b 1) 2);
((f4a1 2) 0) => ((f4b 2) 0);
((f4a1 2) 1) => ((f4b 2) 1);
((f4a1 2) 2) => ((f4b 2) 2);

((f4a2 0) 0) => ((f4b 0) 0);
((f4a2 0) 1) => ((f4b 0) 1);
((f4a2 0) 2) => ((f4b 0) 2);
((f4a2 1) 0) => ((f4b 1) 0);
((f4a2 1) 1) => ((f4b 1) 1);
((f4a2 1) 2) => ((f4b 1) 2);
((f4a2 2) 0) => ((f4b 2) 0);
((f4a2 2) 1) => ((f4b 2) 1);
((f4a2 2) 2) => ((f4b 2) 2);




((lambda (x . y) x) 0 1) => 0;
((lambda (x . y) y) 0 1) => '(1);


(locals (define (f) 0) (f)) => 0;
(locals (define (f . r) r) (f)) => '();
(locals (define (f . r) r) (f 0)) => '(0);
(locals (define (f . r) r) (f 0 1)) => '(0 1);
(locals (define (f a . r) a) (f 0)) => 0;
(locals (define (f a . r) a) (f 0 1)) => 0;
(locals (define (f a . r) r) (f 0)) => '();
(locals (define (f a . r) r) (f 0 1)) => '(1);
(locals (define (f a b . r) b) (f 0 1)) => 1;
(locals (define (f a b . r) b) (f 0 1 2)) => 1;
(locals (define (f a b . r) r) (f 0 1)) => '();
(locals (define (f a b . r) r) (f 0 1 2)) => '(2);

