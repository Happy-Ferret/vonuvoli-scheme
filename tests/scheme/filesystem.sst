

(~fs-directory-exists? "./tests") => #t
(~fs-file-exists? "./tests/scheme.rs") => #t
(~fs-symlink-exists? "/proc/self") => #t

(~fs-directory-exists? "./tests/__does_not_exist__") => #f
(~fs-file-exists? "./tests/__does_not_exist__") => #f
(~fs-symlink-exists? "./tests/__does_not_exist__") => #f




(~opaque? (~fs-metadata "./tests")) => #t
(~opaque? (~fs-metadata "./tests/scheme.rs")) => #t
(~opaque? (~fs-metadata "./__does_not_exist__")) => #f
(~fs-metadata "./__does_not_exist__") => #f

(~opaque? (~fs-metadata "/proc/self")) => #t
(~opaque? (~fs-metadata "/proc/self" #t)) => #t
(~opaque? (~fs-metadata "/proc/self" #f)) => #t


(~fs-metadata-kind "./tests") => 'directory
(~fs-metadata-kind "./tests/scheme.rs") => 'file

(~fs-metadata-directory? "./tests") => #t
(~fs-metadata-file? "./tests/scheme.rs") => #t

(~fs-metadata-file? "./tests") => #f
(~fs-metadata-directory? "./tests/scheme.rs") => #f

(~fs-metadata-kind? "./tests" 'directory) => #t
(~fs-metadata-kind? "./tests/scheme.rs" 'file) => #t

(~fs-metadata-kind? "./tests" 'file) => #f
(~fs-metadata-kind? "./tests/scheme.rs" 'directory) => #f


(~fs-metadata-kind "/proc/self") => 'directory
(~fs-metadata-kind "/proc/self" #t) => 'directory
(~fs-metadata-kind "/proc/self" #f) => 'symlink

(~fs-metadata-directory? "/proc/self") => #t
(~fs-metadata-symlink? "/proc/self") => #t
(~fs-metadata-file? "/proc/self") => #f

(~fs-metadata-kind "/dev/null") => 'character-device
(~fs-metadata-kind? "/dev/null" 'character-device) => #t
(~fs-metadata-character-device? "/dev/null") => #t


(~fs-metadata-readonly? "./tests") => #f
(~fs-metadata-readable? "./tests") => #t
(~fs-metadata-writeable? "./tests") => #t
(~fs-metadata-directory-traversable? "./tests") => #t

(~fs-metadata-readonly? "./tests/scheme.rs") => #f
(~fs-metadata-readable? "./tests/scheme.rs") => #t
(~fs-metadata-writeable? "./tests/scheme.rs") => #t
(~fs-metadata-file-executable? "./tests/scheme.rs") => #f

(integer? (~fs-metadata-file-size "./tests/scheme.rs")) => #t
(~fs-metadata-file-empty? "./tests/scheme.rs") => #f
(~fs-metadata-file-not-empty? "./tests/scheme.rs") => #t


(integer? (~fs-metadata-unix-mode "/dev/null")) => #t
(integer? (~fs-metadata-unix-type "/dev/null")) => #t
(integer? (~fs-metadata-unix-permissions "/dev/null")) => #t
(integer? (~fs-metadata-unix-user-identifier "/dev/null")) => #t
(integer? (~fs-metadata-unix-group-identifier "/dev/null")) => #t
(integer? (~fs-metadata-unix-data-accessed-at "/dev/null")) => #t
(integer? (~fs-metadata-unix-data-modified-at "/dev/null")) => #t
(integer? (~fs-metadata-unix-inode-changed-at "/dev/null")) => #t
(integer? (~fs-metadata-unix-inode-device "/dev/null")) => #t
(integer? (~fs-metadata-unix-inode-number "/dev/null")) => #t
(integer? (~fs-metadata-unix-inode-links "/dev/null")) => #t

(~fs-metadata-unix-mode "/dev/null") => #o20666
(~fs-metadata-unix-type "/dev/null") => #o20000
(~fs-metadata-unix-permissions "/dev/null") => #o666
(~fs-metadata-unix-user-identifier "/dev/null") => 0
(~fs-metadata-unix-group-identifier "/dev/null") => 0
(~fs-metadata-unix-inode-links "/dev/null") => 1

