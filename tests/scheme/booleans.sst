
(not #t) => #f
(not #f) => #t
(not 0) => #f
(not 1) => #f
(not #null) => #f
(not #void) => #f
(not #undefined) => #f


(and) => #t
(and #t) => #t
(and #f) => #f
(and #null) => #null
(and #null 0) => 0
(and 0 #null) => #null
(and 0) => 0
(and 1) => 1
(and 0 1 2) => 2
(and #f 0 1) => #f
(and 0 #f 1) => #f
(and #f #f 1) => #f


(or) => #f
(or #f) => #f
(or #t) => #t
(or #null) => #null
(or #null 0) => #null
(or 0 #null) => 0
(or 0) => 0
(or 1) => 1
(or 0 1 2) => 0
(or #f 0 1) => 0
(or 0 #f 1) => 0
(or #f #f 1) => 1




(and) => #t
(and #t) => #t
(and #f) => #f
(and 1 2) => 2

(and #t #f) => #f
(and #f #t) => #f

(and 1 2 #f) => #f
(and #f 1 2) => #f

(and #t (list)) => #null
(and (list) #t) => #t

(and #f (list)) => #f
(and (list) #f) => #f

(and 1 2 (list)) => #null
(and (list) 1 2) => 2


(or) => #f
(or #t) => #t
(or #f) => #f
(or 1 2) => 1

(or #t #f) => #t
(or #f #t) => #t

(or 1 2 #f) => 1
(or #f 1 2) => 1

(or #t (list)) => #t
(or (list) #t) => #null

(or #f (list)) => #null
(or (list) #f) => #null

(or 1 2 (list)) => 1
(or (list) 1 2) => #null




(~true? #t) => #t
(~true? #f) => #f
(~true? 0) => #f
(~true? 0.0) => #f
(~true? +1) => #f
(~true? +1.0) => #f
(~true? -1) => #f
(~true? -1.0) => #f
(~true? #\x0) => #f
(~true? #\x1) => #f
(~true? #null) => #f
(~true? #void) => #f
(~true? #undefined) => #f
(~true? "") => #f
(~true? "a") => #f
(~true? '||) => #f
(~true? '|a|) => #f
(~true? #u8()) => #f
(~true? #u8(0)) => #f
(~true? #()) => #f
(~true? #(0)) => #f
(~true? #values()) => #f
(~true? #values(0)) => #f
(~true? (cons 0 1)) => #f

(~not-true? #t) => #f
(~not-true? #f) => #t
(~not-true? 0) => #t
(~not-true? 0.0) => #t
(~not-true? +1) => #t
(~not-true? +1.0) => #t
(~not-true? -1) => #t
(~not-true? -1.0) => #t
(~not-true? #\x0) => #t
(~not-true? #\x1) => #t
(~not-true? #null) => #t
(~not-true? #void) => #t
(~not-true? #undefined) => #t
(~not-true? "") => #t
(~not-true? "a") => #t
(~not-true? '||) => #t
(~not-true? '|a|) => #t
(~not-true? #u8()) => #t
(~not-true? #u8(0)) => #t
(~not-true? #()) => #t
(~not-true? #(0)) => #t
(~not-true? #values()) => #t
(~not-true? #values(0)) => #t
(~not-true? (cons 0 1)) => #t


(~false? #t) => #f
(~false? #f) => #t
(~false? 0) => #f
(~false? 0.0) => #f
(~false? +1) => #f
(~false? +1.0) => #f
(~false? -1) => #f
(~false? -1.0) => #f
(~false? #\x0) => #f
(~false? #\x1) => #f
(~false? #null) => #f
(~false? #void) => #f
(~false? #undefined) => #f
(~false? "") => #f
(~false? "a") => #f
(~false? '||) => #f
(~false? '|a|) => #f
(~false? #u8()) => #f
(~false? #u8(0)) => #f
(~false? #()) => #f
(~false? #(0)) => #f
(~false? #values()) => #f
(~false? #values(0)) => #f
(~false? (cons 0 1)) => #f

(~not-false? #t) => #t
(~not-false? #f) => #f
(~not-false? 0) => #t
(~not-false? 0.0) => #t
(~not-false? +1) => #t
(~not-false? +1.0) => #t
(~not-false? -1) => #t
(~not-false? -1.0) => #t
(~not-false? #\x0) => #t
(~not-false? #\x1) => #t
(~not-false? #null) => #t
(~not-false? #void) => #t
(~not-false? #undefined) => #t
(~not-false? "") => #t
(~not-false? "a") => #t
(~not-false? '||) => #t
(~not-false? '|a|) => #t
(~not-false? #u8()) => #t
(~not-false? #u8(0)) => #t
(~not-false? #()) => #t
(~not-false? #(0)) => #t
(~not-false? #values()) => #t
(~not-false? #values(0)) => #t
(~not-false? (cons 0 1)) => #t


(~true-or-equivalent? #t) => #t
(~true-or-equivalent? #f) => #f
(~true-or-equivalent? 0) => #t
(~true-or-equivalent? 0.0) => #t
(~true-or-equivalent? +1) => #t
(~true-or-equivalent? +1.0) => #t
(~true-or-equivalent? -1) => #t
(~true-or-equivalent? -1.0) => #t
(~true-or-equivalent? #\x0) => #t
(~true-or-equivalent? #\x1) => #t
(~true-or-equivalent? #null) => #f
(~true-or-equivalent? #void) => #f
(~true-or-equivalent? #undefined) => #f
(~true-or-equivalent? "") => #t
(~true-or-equivalent? "a") => #t
(~true-or-equivalent? '||) => #t
(~true-or-equivalent? '|a|) => #t
(~true-or-equivalent? #u8()) => #t
(~true-or-equivalent? #u8(0)) => #t
(~true-or-equivalent? #()) => #t
(~true-or-equivalent? #(0)) => #t
(~true-or-equivalent? #values()) => #t
(~true-or-equivalent? #values(0)) => #t
(~true-or-equivalent? (cons 0 1)) => #t

(~false-or-equivalent? #t) => #f
(~false-or-equivalent? #f) => #t
(~false-or-equivalent? 0) => #f
(~false-or-equivalent? 0.0) => #f
(~false-or-equivalent? +1) => #f
(~false-or-equivalent? +1.0) => #f
(~false-or-equivalent? -1) => #f
(~false-or-equivalent? -1.0) => #f
(~false-or-equivalent? #\x0) => #f
(~false-or-equivalent? #\x1) => #f
(~false-or-equivalent? #null) => #t
(~false-or-equivalent? #void) => #t
(~false-or-equivalent? #undefined) => #t
(~false-or-equivalent? "") => #f
(~false-or-equivalent? "a") => #f
(~false-or-equivalent? '||) => #f
(~false-or-equivalent? '|a|) => #f
(~false-or-equivalent? #u8()) => #f
(~false-or-equivalent? #u8(0)) => #f
(~false-or-equivalent? #()) => #f
(~false-or-equivalent? #(0)) => #f
(~false-or-equivalent? #values()) => #f
(~false-or-equivalent? #values(0)) => #f
(~false-or-equivalent? (cons 0 1)) => #f

