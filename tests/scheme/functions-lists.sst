
(define (fn-1 value_1) (+ value_1)) => !ignore;
(define (fn-2 value_1 value_2) (+ value_1 value_2)) => !ignore;




(map fn-1 '()) => '();
(map fn-1 '() '()) => !fixme '();

(map fn-2 '()) => !fixme '();
(map fn-2 '() '()) => '();

(map fn-2 '(1 2) '(3 4)) => '(4 6);
(map fn-2 '(1 2 0) '(3 4)) => '(4 6);
(map fn-2 '(1 2) '(3 4 0)) => '(4 6);




(for-each fn-1 '()) => #void;
(for-each fn-1 '() '()) => !fixme #void;

(for-each fn-2 '()) => !fixme #void;
(for-each fn-2 '() '()) => #void;

(for-each fn-2 '(1 2) '(3 4)) => #void;
(for-each fn-2 '(1 2 0) '(3 4)) => #void;
(for-each fn-2 '(1 2) '(3 4 0)) => #void;




(map fn-1 '()) => '();
(map fn-1 '(0)) => '(0);
(map fn-1 '(0 1)) => '(0 1);
(map fn-1 '(0 1 2)) => '(0 1 2);
(map fn-1 '(0 1 2 3)) => '(0 1 2 3);
(map fn-1 '(0 1 2 3 4)) => '(0 1 2 3 4);

(for-each fn-1 '()) => #void;
(for-each fn-1 '(0)) => #void;
(for-each fn-1 '(0 1)) => #void;
(for-each fn-1 '(0 1 2)) => #void;
(for-each fn-1 '(0 1 2 3)) => #void;
(for-each fn-1 '(0 1 2 3 4)) => #void;

