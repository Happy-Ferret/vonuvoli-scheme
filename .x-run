#!/bin/bash

set -e -E -u -o pipefail -o noclobber -o noglob +o braceexpand || exit -- 1
trap 'printf -- "[ee] failed: %s\n" "${BASH_COMMAND}" >&2' ERR || exit -- 1
test "${#}" -eq 0
export -- LC_ALL=C


cat <<'EOS'

:: compile / peg :: test "${#}" -eq 0 ; if test ./sources/parser_peg.peg -nt ./sources/parser_peg.rs ; then rust-peg < ./sources/parser_peg.peg | rust-fmt >| ./sources/parser_peg.rs || true ; fi

:: compile / bin / debug :: x-run ':: compile / peg' ; exec -- less-exec cargo build "${@}"
:: compile / bin / release :: x-run ':: compile / peg' ; exec -- less-exec cargo build --release "${@}"

:: execute / bin / debug :: x-run ':: compile / peg' ; exec -- cargo run -- "${@}"
:: execute / bin / release :: x-run ':: compile / peg' ; exec -- cargo run --release -- "${@}"

:: execute / test / all :: x-run ':: compile / peg' ; export -- RUSTFLAGS=-Awarnings ; exec -- less-exec cargo test -- "${@}"

EOS


for _test in sizes parser contexts expressions evaluator counters r7rs compiler ; do
sed -r -e 's#@\{TEST\}#'"${_test}"'#g' <<'EOS'
:: execute / test / @{TEST} :: x-run ':: compile / peg' ; export -- RUSTFLAGS=-Awarnings RUST_BACKTRACE=1 ; exec -- less-exec cargo test --test @{TEST} -- --nocapture "${@}"
EOS
done


find . -xdev -type f -name '*.rs' -printf ':: edit / %P :: exec -- sce %p\n' | sort


exit -- 0
